buildscript {
	repositories {
		mavenLocal()
		jcenter()
	}
	dependencies {
		classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.+'
		classpath "net.alchim31.gradle:gradle-getdown-plugin:0.4.1"
		classpath "org.xtend:xtend-gradle-plugin:0.3.4"
		classpath 'io.protostuff:protostuff-compiler:1.3.1'
	}
}


apply from: 'https://gist.githubusercontent.com/davidB/4c520c9dc1b3fddcf0ec/raw/jme-head.gradle'
apply plugin: 'application'
apply plugin: "org.xtend.xtend"

version = '0.24.0'
group = 'net.alchim31.games'
mainClassName = 'vdrones.Main'
applicationDefaultJvmArgs = ['-ea']

def v_jme = '3.0.10'
//def v_jme = '3.1.0-snapshot-github'
def v_slf4j = '1.7.7'

dependencies {
	provided 'org.projectlombok:lombok:1.14.2'
	compile 'io.protostuff:protostuff-core:1.3.1'
	compile 'org.eclipse.xtend:org.eclipse.xtend.lib:2.7.+'
	compile 'net.alchim31.jme3:jme3_ext:0.+'
	compile 'net.alchim31.jme3:jme3_ext_deferred:0.+'
	compile 'net.alchim31.jme3:jme3_ext_spatial_explorer:0+'
	compile 'net.alchim31.jme3:jme3_ext_remote_editor:0+'
	compile "com.jme3:jme3-core:${v_jme}"
	compile "com.jme3:jme3-effects:${v_jme}"
	compile ("com.jme3:jme3-jbullet:${v_jme}"){
		exclude module: "jbullet"
		exclude module: "jme3-terrain"
	}
	compile ('net.alchim31.jme3:jmbullet:0.3.0'){
		exclude module: "jbullet"
	}
	compile "org.slf4j:slf4j-api:${v_slf4j}"
	compile "com.jme3x:jfx:1.+"
	compile 'com.squareup.dagger:dagger:1.2.+'
	provided 'com.squareup.dagger:dagger-compiler:1.2.+'
	compile 'com.netflix.rxjava:rxjava-core:0.19.2'
	compile "com.jme3:jme3-lwjgl:${v_jme}"
	runtime("com.jme3:jme3-desktop:${v_jme}"){
		exclude module: "jinput"
	}
	runtime 'net.java.jinput:jinput:2.0.6'
	runtime "com.jme3:jme3-jogg:${v_jme}"
	//runtime "org.slf4j:slf4j-jdk14:${v_slf4j}"
	runtime "org.slf4j:jul-to-slf4j:${v_slf4j}"
	runtime 'ch.qos.logback:logback-classic:1.1.2'
	runtime 'net.alchim31.jme3:jme3_ext:0.2.0:textures'
	testCompile 'junit:junit:4.11'
	testCompile 'org.mockito:mockito-core:1.8.5'
}


sourceSets.main.java.srcDirs += "${project.buildDir}/generated/java"
task protostuff << {
	//io.protostuff.compiler.CompilerMain.compile(["protostuff.properties"])
	io.protostuff.compiler.CompilerMain.main("protostuff.properties")
}
compileJava.dependsOn(protostuff)
compileXtend.dependsOn(protostuff)

apply from: 'https://gist.githubusercontent.com/davidB/4c520c9dc1b3fddcf0ec/raw/hello.gradle'
apply from: 'https://gist.githubusercontent.com/davidB/4c520c9dc1b3fddcf0ec/raw/copyDeps.gradle'
//apply from: 'https://gist.githubusercontent.com/davidB/4c520c9dc1b3fddcf0ec/raw/getdown.gradle'

buildscript {
	repositories {
		mavenLocal()
		jcenter()
	}
	dependencies {
		classpath "net.alchim31.gradle:gradle-getdown-plugin:0.4.1"
	}
}
apply plugin: 'net.alchim31.getdown'

getdown {
	urlbase = "http://alchim31.net/download/${project.name}_demo"
	checklatest = false
	mainClassName = project.mainClassName
	jvmArgs = project.applicationDefaultJvmArgs
	tmplGetdownTxt = tmplGetdownTxt + "\nallow_offline = true"
}
