#!/usr/bin/env dart
import "dart:async" as p;import "dart:collection" as A_p;import "dart:convert" as B_p;import "dart:io" as C_p;import "dart:math" as D_p;import "dart:typed_data" as E_p;void main(){new CodeGenerator(C_p.stdin,C_p.stdout,C_p.stderr).generate();}abstract class IntX implements Comparable{IntX operator+(other);IntX operator-(other);IntX operator-();IntX operator*(other);IntX operator~/(other);IntX operator&(other);IntX operator|(other);IntX operator^(other);IntX operator~();IntX operator<<(int shiftAmount);IntX operator>>(int shiftAmount);int compareTo(Comparable other);bool operator==(other);bool operator<(other);bool operator<=(other);bool operator>(other);bool operator>=(other);bool get isNegative;bool get isZero;int get hashCode;IntX abs();List<int> toBytes();int toInt();Int64 toInt64();String toString();String toRadixString(int radix);}class Int32 implements IntX{}class Int64 implements IntX{final int _l,_m,A__h;static const int _BITS=22;static const int _BITS01=44;static const int _BITS2=20;static const int _MASK=4194303;static const int _MASK2=1048575;static const int _SIGN_BIT_MASK=524288;static const Int64 A_ZERO=const Int64._bits(0,0,0);const Int64._bits(int this._l,int this._m,int this.A__h);factory Int64([int A_value=0]){int v0=0,v1=0,v2=0;bool negative=false;if(A_value<0){negative=true;A_value=-A_value-1;}if(_haveBigInts){v0=_MASK&A_value;v1=_MASK&(A_value>>_BITS);v2=_MASK2&(A_value>>_BITS01);}else{v2=A_value~/17592186044416;A_value-= v2*17592186044416;v1=A_value~/4194304;A_value-= v1*4194304;v0=A_value;}if(negative){v0=_MASK&~v0;v1=_MASK&~v1;v2=_MASK2&~v2;}return new Int64._bits(v0,v1,v2);}factory Int64.fromBytes(List<int> bytes){int A_top=bytes[7]&0xff;A_top<<= 8;A_top|= bytes[6]&0xff;A_top<<= 8;A_top|= bytes[5]&0xff;A_top<<= 8;A_top|= bytes[4]&0xff;int A_bottom=bytes[3]&0xff;A_bottom<<= 8;A_bottom|= bytes[2]&0xff;A_bottom<<= 8;A_bottom|= bytes[1]&0xff;A_bottom<<= 8;A_bottom|= bytes[0]&0xff;return new Int64.fromInts(A_top,A_bottom);}factory Int64.fromInts(int A_top,int A_bottom){A_top&= 0xffffffff;A_bottom&= 0xffffffff;int d0=A_bottom&_MASK;int d1=((A_top&0xfff)<<10)|((A_bottom>>_BITS)&0x3ff);int d2=(A_top>>12)&_MASK2;return new Int64._bits(d0,d1,d2);}static Int64 _promote(val){if(val is Int64){return val;}else if(val is int){return new Int64(val);}else if(val is Int32){return val.toInt64();}throw new ArgumentError(val);}Int64 operator+(other){Int64 o=_promote(other);int sum0=_l+o._l;int sum1=_m+o._m+(sum0>>_BITS);int sum2=A__h+o.A__h+(sum1>>_BITS);return Int64.A__masked(sum0,sum1,sum2);}Int64 operator-(other){Int64 o=_promote(other);return _sub(_l,_m,A__h,o._l,o._m,o.A__h);}Int64 operator-()=>_negate(_l,_m,A__h);Int64 operator*(other){Int64 o=_promote(other);int a0=_l&0x1fff;int a1=(_l>>13)|((_m&0xf)<<9);int a2=(_m>>4)&0x1fff;int a3=(_m>>17)|((A__h&0xff)<<5);int a4=(A__h&0xfff00)>>8;int b0=o._l&0x1fff;int b1=(o._l>>13)|((o._m&0xf)<<9);int b2=(o._m>>4)&0x1fff;int b3=(o._m>>17)|((o.A__h&0xff)<<5);int b4=(o.A__h&0xfff00)>>8;int p0=a0*b0;int p1=a1*b0;int p2=a2*b0;int p3=a3*b0;int p4=a4*b0;if(b1!=0){p1+= a0*b1;p2+= a1*b1;p3+= a2*b1;p4+= a3*b1;}if(b2!=0){p2+= a0*b2;p3+= a1*b2;p4+= a2*b2;}if(b3!=0){p3+= a0*b3;p4+= a1*b3;}if(b4!=0){p4+= a0*b4;}int c00=p0&0x3fffff;int c01=(p1&0x1ff)<<13;int c0=c00+c01;int c10=p0>>22;int c11=p1>>9;int c12=(p2&0x3ffff)<<4;int c13=(p3&0x1f)<<17;int c1=c10+c11+c12+c13;int c22=p2>>18;int c23=p3>>5;int c24=(p4&0xfff)<<8;int c2=c22+c23+c24;c1+= c0>>_BITS;c0&= _MASK;c2+= c1>>_BITS;c1&= _MASK;c2&= _MASK2;return new Int64._bits(c0,c1,c2);}Int64 operator~/(other)=>_divide(this,other,_RETURN_DIV);Int64 operator&(other){Int64 o=_promote(other);int a0=_l&o._l;int a1=_m&o._m;int a2=A__h&o.A__h;return new Int64._bits(a0,a1,a2);}Int64 operator|(other){Int64 o=_promote(other);int a0=_l|o._l;int a1=_m|o._m;int a2=A__h|o.A__h;return new Int64._bits(a0,a1,a2);}Int64 operator^(other){Int64 o=_promote(other);int a0=_l^o._l;int a1=_m^o._m;int a2=A__h^o.A__h;return new Int64._bits(a0,a1,a2);}Int64 operator~(){return Int64.A__masked(~_l,~_m,~A__h);}Int64 operator<<(int n){if(n<0){throw new ArgumentError(n);}n&= 63;int res0,res1,res2;if(n<_BITS){res0=_l<<n;res1=(_m<<n)|(_l>>(_BITS-n));res2=(A__h<<n)|(_m>>(_BITS-n));}else if(n<_BITS01){res0=0;res1=_l<<(n-_BITS);res2=(_m<<(n-_BITS))|(_l>>(_BITS01-n));}else{res0=0;res1=0;res2=_l<<(n-_BITS01);}return Int64.A__masked(res0,res1,res2);}Int64 operator>>(int n){if(n<0){throw new ArgumentError(n);}n&= 63;int res0,res1,res2;int a2=A__h;bool negative=(a2&_SIGN_BIT_MASK)!=0;if(negative&&_MASK>_MASK2){a2+= (_MASK-_MASK2);}if(n<_BITS){res2=_shiftRight(a2,n);if(negative){res2|= _MASK2&~(_MASK2>>n);}res1=_shiftRight(_m,n)|(a2<<(_BITS-n));res0=_shiftRight(_l,n)|(_m<<(_BITS-n));}else if(n<_BITS01){res2=negative?_MASK2:0;res1=_shiftRight(a2,n-_BITS);if(negative){res1|= _MASK&~(_MASK>>(n-_BITS));}res0=_shiftRight(_m,n-_BITS)|(a2<<(_BITS01-n));}else{res2=negative?_MASK2:0;res1=negative?_MASK:0;res0=_shiftRight(a2,n-_BITS01);if(negative){res0|= _MASK&~(_MASK>>(n-_BITS01));}}return Int64.A__masked(res0,res1,res2);}bool operator==(other){Int64 o;if(other is Int64){o=other;}else if(other is int){if(A__h==0&&_m==0)return _l==other;if((_MASK&other)==other)return false;o=new Int64(other);}else if(other is Int32){o=other.toInt64();}if(o!=null){return _l==o._l&&_m==o._m&&A__h==o.A__h;}return false;}int compareTo(Comparable other){Int64 o=_promote(other);int signa=A__h>>(_BITS2-1);int signb=o.A__h>>(_BITS2-1);if(signa!=signb){return signa==0?1:-1;}if(A__h>o.A__h){return 1;}else if(A__h<o.A__h){return -1;}if(_m>o._m){return 1;}else if(_m<o._m){return -1;}if(_l>o._l){return 1;}else if(_l<o._l){return -1;}return 0;}bool operator<(other){return this.compareTo(other)<0;}bool operator<=(other){return this.compareTo(other)<=0;}bool operator>(other){return this.compareTo(other)>0;}bool operator>=(other){return this.compareTo(other)>=0;}bool get isNegative=>(A__h&_SIGN_BIT_MASK)!=0;bool get isZero=>A__h==0&&_m==0&&_l==0;int get hashCode{int A_bottom=((_m&0x3ff)<<_BITS)|_l;int A_top=(A__h<<12)|((_m>>10)&0xfff);return A_bottom^A_top;}Int64 abs(){return this.isNegative?-this:this;}List<int> toBytes(){List<int> result=new List<int>(8);result[0]=_l&0xff;result[1]=(_l>>8)&0xff;result[2]=((_m<<6)&0xfc)|((_l>>16)&0x3f);result[3]=(_m>>2)&0xff;result[4]=(_m>>10)&0xff;result[5]=((A__h<<4)&0xf0)|((_m>>18)&0xf);result[6]=(A__h>>4)&0xff;result[7]=(A__h>>12)&0xff;return result;}int toInt(){int l=_l;int m=_m;int h=A__h;bool negative=false;if((A__h&_SIGN_BIT_MASK)!=0){l=_MASK&~_l;m=_MASK&~_m;h=_MASK2&~A__h;negative=true;}if(_haveBigInts){int result=(h<<_BITS01)|(m<<_BITS)|l;return negative?-result-1:result;}else{if(negative){return -((l+1)+(m*4194304)+(h*17592186044416));}else{return (l+(m*4194304))+(h*17592186044416);}}}Int64 toInt64()=>this;String toString()=>_toRadixString(10);String toRadixString(int radix){if((radix<=1)||(radix>36)){throw new ArgumentError("Bad radix: ${radix}");}return _toRadixString(radix);}String _toRadixString(int radix){int d0=_l;int d1=_m;int d2=A__h;if(d0==0&&d1==0&&d2==0)return '0';String sign='';if((d2&_SIGN_BIT_MASK)!=0){sign='-';d0=0-d0;int borrow=(d0>>_BITS)&1;d0&= _MASK;d1=0-d1-borrow;borrow=(d1>>_BITS)&1;d1&= _MASK;d2=0-d2-borrow;d2&= _MASK2;}int d4=(d2<<4)|(d1>>18);int d3=(d1>>8)&0x3ff;d2=((d1<<2)|(d0>>20))&0x3ff;d1=(d0>>10)&0x3ff;d0=d0&0x3ff;int fatRadix=_fatRadixTable[radix];String chunk1="",chunk2="",chunk3="";while (!(d4==0&&d3==0)){int q=d4~/fatRadix;int r=d4-q*fatRadix;d4=q;d3+= r<<10;q=d3~/fatRadix;r=d3-q*fatRadix;d3=q;d2+= r<<10;q=d2~/fatRadix;r=d2-q*fatRadix;d2=q;d1+= r<<10;q=d1~/fatRadix;r=d1-q*fatRadix;d1=q;d0+= r<<10;q=d0~/fatRadix;r=d0-q*fatRadix;d0=q;assert(chunk3=="");chunk3=chunk2;chunk2=chunk1;chunk1=(fatRadix+r).toRadixString(radix).substring(1);}int residue=(d2<<20)+(d1<<10)+d0;String leadingDigits=residue==0?'':residue.toRadixString(radix);return '${sign}${leadingDigits}${chunk1}${chunk2}${chunk3}';}static const _fatRadixTable=const<int>[0,0,2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2,3*3*3*3*3*3*3*3*3*3*3*3,4*4*4*4*4*4*4*4*4*4,5*5*5*5*5*5*5*5,6*6*6*6*6*6*6,7*7*7*7*7*7*7,8*8*8*8*8*8,9*9*9*9*9*9,10*10*10*10*10*10,11*11*11*11*11,12*12*12*12*12,13*13*13*13*13,14*14*14*14*14,15*15*15*15*15,16*16*16*16*16,17*17*17*17,18*18*18*18,19*19*19*19,20*20*20*20,21*21*21*21,22*22*22*22,23*23*23*23,24*24*24*24,25*25*25*25,26*26*26*26,27*27*27*27,28*28*28*28,29*29*29*29,30*30*30*30,31*31*31*31,32*32*32*32,33*33*33,34*34*34,35*35*35,36*36*36];static Int64 A__masked(int a0,int a1,int a2)=>new Int64._bits(_MASK&a0,_MASK&a1,_MASK2&a2);static Int64 _sub(int a0,int a1,int a2,int b0,int b1,int b2){int diff0=a0-b0;int diff1=a1-b1-((diff0>>_BITS)&1);int diff2=a2-b2-((diff1>>_BITS)&1);return A__masked(diff0,diff1,diff2);}static Int64 _negate(int b0,int b1,int b2){return _sub(0,0,0,b0,b1,b2);}static bool _haveBigIntsCached=null;static bool get _haveBigInts{if(_haveBigIntsCached==null){var A_x=9007199254740992;if(2+2!=4){A_x=0;}var A_y=A_x+1;var same=A_y==A_x;_haveBigIntsCached=!same;}return _haveBigIntsCached;}static int _shiftRight(int A_x,int n){if(A_x>=0){return A_x>>n;}else{int shifted=A_x>>n;if(shifted>=0x80000000){shifted-= 4294967296;}return shifted;}}static Int64 _divide(Int64 a,other,int what){Int64 b=_promote(other);if(b.isZero){throw new IntegerDivisionByZeroException();}if(a.isZero)return A_ZERO;bool aNeg=a.isNegative;bool bNeg=b.isNegative;a=a.abs();b=b.abs();int a0=a._l;int a1=a._m;int a2=a.A__h;int b0=b._l;int b1=b._m;int b2=b.A__h;return _divideHelper(a0,a1,a2,aNeg,b0,b1,b2,bNeg,what);}static const _RETURN_DIV=1;static const _RETURN_REM=2;static const _RETURN_MOD=3;static _divideHelper(int a0,int a1,int a2,bool aNeg,int b0,int b1,int b2,bool bNeg,int what){int q0=0,q1=0,q2=0;int r0=0,r1=0,r2=0;if(b2==0&&b1==0&&b0<(1<<(30-_BITS))){q2=a2~/b0;int carry=a2-q2*b0;int d1=a1+(carry<<_BITS);q1=d1~/b0;carry=d1-q1*b0;int d0=a0+(carry<<_BITS);q0=d0~/b0;r0=d0-q0*b0;}else{const double K2=17592186044416.0;const double K1=4194304.0;double ad=a0+K1*a1+K2*a2;double bd=b0+K1*b1+K2*b2;double qd=(ad/bd).floorToDouble();double q2d=(qd/K2).floorToDouble();qd=qd-K2*q2d;double q1d=(qd/K1).floorToDouble();double q0d=qd-K1*q1d;q2=q2d.toInt();q1=q1d.toInt();q0=q0d.toInt();assert(q0+K1*q1+K2*q2==(ad/bd).floorToDouble());assert(q2==0||b2==0);double p0d=q0d*b0;double p0carry=(p0d/K1).floorToDouble();p0d=p0d-p0carry*K1;double p1d=q1d*b0+q0d*b1+p0carry;double p1carry=(p1d/K1).floorToDouble();p1d=p1d-p1carry*K1;double p2d=q2d*b0+q1d*b1+q0d*b2+p1carry;assert(p2d<=_MASK2);int diff0=a0-p0d.toInt();int diff1=a1-p1d.toInt()-((diff0>>_BITS)&1);int diff2=a2-p2d.toInt()-((diff1>>_BITS)&1);r0=_MASK&diff0;r1=_MASK&diff1;r2=_MASK2&diff2;while (r2>=_SIGN_BIT_MASK||r2>b2||(r2==b2&&(r1>b1||(r1==b1&&r0>=b0)))){int m=(r2&_SIGN_BIT_MASK)==0?1:-1;int d0=r0-m*b0;int d1=r1-m*(b1+((d0>>_BITS)&1));int d2=r2-m*(b2+((d1>>_BITS)&1));r0=_MASK&d0;r1=_MASK&d1;r2=_MASK2&d2;d0=q0+m;d1=q1+m*((d0>>_BITS)&1);d2=q2+m*((d1>>_BITS)&1);q0=_MASK&d0;q1=_MASK&d1;q2=_MASK2&d2;}}assert(Int64.A_ZERO<=new Int64._bits(r0,r1,r2));assert(r2<b2||new Int64._bits(r0,r1,r2)<new Int64._bits(b0,b1,b2));assert(what==_RETURN_DIV||what==_RETURN_MOD||what==_RETURN_REM);if(what==_RETURN_DIV){if(aNeg!=bNeg)return _negate(q0,q1,q2);return new Int64._bits(q0,q1,q2);}if(!aNeg)return new Int64._bits(r0,r1,r2);if(what==_RETURN_MOD){if(r0==0&&r1==0&&r2==0){return A_ZERO;}else{return _sub(b0,b1,b2,r0,r1,r2);}}else{return _negate(r0,r1,r2);}}}class CodedBufferWriter{final List<E_p.TypedData> _output=<E_p.TypedData>[] ;int _runningSizeInBytes=0;static final _WRITE_FUNCTION_MAP=_makeWriteFunctionMap();static E_p.ByteData _toVarint32(int A_value){E_p.Uint8List result=new E_p.Uint8List(5);int i=0;while (A_value>=0x80){result[i++ ]=0x80|(A_value&0x7f);A_value>>= 7;}result[i++ ]=A_value;return new E_p.ByteData.view(result.buffer,0,i);}static E_p.ByteData _toVarint64(Int64 A_value){E_p.Uint8List result=new E_p.Uint8List(10);int i=0;E_p.ByteData bytes=new E_p.ByteData.view(new E_p.Uint8List.fromList(A_value.toBytes()).buffer,0,8);int lo=bytes.getUint32(0,E_p.Endianness.LITTLE_ENDIAN);int hi=bytes.getUint32(4,E_p.Endianness.LITTLE_ENDIAN);while (hi>0||lo>=0x80){result[i++ ]=0x80|(lo&0x7f);lo=(lo>>7)|((hi&0x7f)<<25);hi>>= 7;}result[i++ ]=lo;return new E_p.ByteData.view(result.buffer,0,i);}static E_p.ByteData _int32ToBytes(int A_value)=>_toVarint32(A_value&0xffffffff);static _makeWriteFunctionMap(){writeBytesNoTag(output,List<int> A_value){output.writeInt32NoTag(A_value.length);output.writeRawBytes(new E_p.Uint8List(A_value.length)..setRange(0,A_value.length,A_value));}makeWriter(convertor)=>((output,A_value){output.writeRawBytes(convertor(A_value));});int _encodeZigZag32(int A_value)=>(A_value<<1)^(A_value>>31);Int64 _encodeZigZag64(Int64 A_value)=>(A_value<<1)^(A_value>>63);E_p.ByteData makeByteData32(int A_value)=>new E_p.ByteData(4)..setUint32(0,A_value,E_p.Endianness.LITTLE_ENDIAN);E_p.ByteData makeByteData64(Int64 A_value){var A_data=new E_p.Uint8List.fromList(A_value.toBytes());return new E_p.ByteData.view(A_data.buffer,0,8);}return new Map<int,A_Dynamic_>()..[GeneratedMessage._BOOL_BIT]=makeWriter((A_value)=>_int32ToBytes(A_value?1:0))..[GeneratedMessage._BYTES_BIT]=writeBytesNoTag..[GeneratedMessage._STRING_BIT]=(output,A_value){writeBytesNoTag(output,B_p.UTF8.encode(A_value));}..[GeneratedMessage._DOUBLE_BIT]=makeWriter((double A_value){if(A_value.isNaN)return new E_p.ByteData(8)..setUint32(0,0x00000000,E_p.Endianness.LITTLE_ENDIAN)..setUint32(4,0x7ff80000,E_p.Endianness.LITTLE_ENDIAN);return new E_p.ByteData(8)..setFloat64(0,A_value,E_p.Endianness.LITTLE_ENDIAN);})..[GeneratedMessage._FLOAT_BIT]=makeWriter((double A_value){const double MIN_FLOAT_DENORM=1.401298464324817E-45;const double MAX_FLOAT=3.4028234663852886E38;if(A_value.isNaN)return makeByteData32(0x7fc00000);if(A_value.abs()<MIN_FLOAT_DENORM){return makeByteData32(A_value.isNegative?0x80000000:0x00000000);}if(A_value.isInfinite||A_value.abs()>MAX_FLOAT){return makeByteData32(A_value.isNegative?0xff800000:0x7f800000);}return new E_p.ByteData(4)..setFloat32(0,A_value,E_p.Endianness.LITTLE_ENDIAN);})..[GeneratedMessage._ENUM_BIT]=makeWriter((A_value)=>_int32ToBytes(A_value.value))..[GeneratedMessage._GROUP_BIT]=(output,A_value){A_value.writeToCodedBufferWriter(output);}..[GeneratedMessage._INT32_BIT]=makeWriter(_int32ToBytes)..[GeneratedMessage._INT64_BIT]=makeWriter((A_value)=>_toVarint64(A_value))..[GeneratedMessage._SINT32_BIT]=makeWriter((int A_value)=>_int32ToBytes(_encodeZigZag32(A_value)))..[GeneratedMessage._SINT64_BIT]=makeWriter((Int64 A_value)=>_toVarint64(_encodeZigZag64(A_value)))..[GeneratedMessage._UINT32_BIT]=makeWriter(_toVarint32)..[GeneratedMessage._UINT64_BIT]=makeWriter(_toVarint64)..[GeneratedMessage._FIXED32_BIT]=makeWriter(makeByteData32)..[GeneratedMessage._FIXED64_BIT]=makeWriter(makeByteData64)..[GeneratedMessage._SFIXED32_BIT]=makeWriter(makeByteData32)..[GeneratedMessage._SFIXED64_BIT]=makeWriter(makeByteData64)..[GeneratedMessage._MESSAGE_BIT]=(output,A_value){output._withDeferredSizeCalculation((){A_value.writeToCodedBufferWriter(output);});};}static final _OPEN_TAG_MAP=_makeOpenTagMap();static _makeOpenTagMap(){return new Map<int,int>()..[GeneratedMessage._BOOL_BIT]=WIRETYPE_VARINT..[GeneratedMessage._BYTES_BIT]=WIRETYPE_LENGTH_DELIMITED..[GeneratedMessage._STRING_BIT]=WIRETYPE_LENGTH_DELIMITED..[GeneratedMessage._DOUBLE_BIT]=WIRETYPE_FIXED64..[GeneratedMessage._FLOAT_BIT]=WIRETYPE_FIXED32..[GeneratedMessage._ENUM_BIT]=WIRETYPE_VARINT..[GeneratedMessage._GROUP_BIT]=WIRETYPE_START_GROUP..[GeneratedMessage._INT32_BIT]=WIRETYPE_VARINT..[GeneratedMessage._INT64_BIT]=WIRETYPE_VARINT..[GeneratedMessage._SINT32_BIT]=WIRETYPE_VARINT..[GeneratedMessage._SINT64_BIT]=WIRETYPE_VARINT..[GeneratedMessage._UINT32_BIT]=WIRETYPE_VARINT..[GeneratedMessage._UINT64_BIT]=WIRETYPE_VARINT..[GeneratedMessage._FIXED32_BIT]=WIRETYPE_FIXED32..[GeneratedMessage._FIXED64_BIT]=WIRETYPE_FIXED64..[GeneratedMessage._SFIXED32_BIT]=WIRETYPE_FIXED32..[GeneratedMessage._SFIXED64_BIT]=WIRETYPE_FIXED64..[GeneratedMessage._MESSAGE_BIT]=WIRETYPE_LENGTH_DELIMITED;}void _withDeferredSizeCalculation(continuation){int index=_output.length;_output.add(null);int currentRunningSizeInBytes=_runningSizeInBytes;continuation();int writtenSizeInBytes=_runningSizeInBytes-currentRunningSizeInBytes;E_p.TypedData sizeMarker=_int32ToBytes(writtenSizeInBytes);_output[index]=sizeMarker;_runningSizeInBytes+= sizeMarker.lengthInBytes;}void writeField(int fieldNumber,int fieldType,fieldValue){var valueType=fieldType&~0x07;var writeFunction=_WRITE_FUNCTION_MAP[valueType];writeTag(int wireFormat){writeInt32NoTag(makeTag(fieldNumber,wireFormat));}if((fieldType&GeneratedMessage._PACKED_BIT)!=0){if(!fieldValue.isEmpty){writeTag(WIRETYPE_LENGTH_DELIMITED);_withDeferredSizeCalculation((){for(var A_value in fieldValue){writeFunction(this,A_value);}});}return;}writeValue(A_value){writeTag(_OPEN_TAG_MAP[valueType]);writeFunction(this,A_value);if(valueType==GeneratedMessage._GROUP_BIT){writeTag(WIRETYPE_END_GROUP);}}if((fieldType&GeneratedMessage._REPEATED_BIT)!=0){fieldValue.forEach(writeValue);return;}writeValue(fieldValue);}void writeInt32NoTag(int A_value){writeRawBytes(_int32ToBytes(A_value));}void writeRawBytes(E_p.TypedData A_value){_output.add(A_value);_runningSizeInBytes+= A_value.lengthInBytes;}E_p.Uint8List toBuffer(){E_p.Uint8List result=new E_p.Uint8List(_runningSizeInBytes);int A_position=0;for(var typedData in _output){E_p.Uint8List asBytes=new E_p.Uint8List.view(typedData.buffer,typedData.offsetInBytes,typedData.lengthInBytes);result.setRange(A_position,A_position+typedData.lengthInBytes,asBytes);A_position+= typedData.lengthInBytes;}return result;}}const int TAG_TYPE_BITS=3;class PbList<A_E> extends Object with A_p.ListMixin<A_E> implements List<A_E>{PbList():_wrappedList=<A_E>[] ;bool operator==(other)=>(other is PbList)&&_areListsEqual(other,this);int get hashCode=>_wrappedList.hashCode;Iterator<A_E> get iterator=>_wrappedList.iterator;A_E operator[](int index)=>_wrappedList[index];void operator[]=(int index,A_E A_value){_validate(A_value);_wrappedList[index]=A_value;}void set length(int newLength){if(newLength>length){throw new ArgumentError('Extending protobuf lists is not supported');}_wrappedList.length=newLength;}void add(A_E A_value){_validate(A_value);_wrappedList.add(A_value);}void addAll(Iterable<A_E> collection){collection.forEach(_validate);_wrappedList.addAll(collection);}void setRange(int A_start,int A_end,List<A_E> A_from,[int skipCount=0]){A_from.sublist(skipCount,skipCount+A_end-A_start).forEach(_validate);_wrappedList.setRange(A_start,A_end,A_from,skipCount);}int get length=>_wrappedList.length;void _validate(A_E val){if(val==null){throw new ArgumentError('Value is null');}if(!(val is A_E)){throw new ArgumentError('Value (${val}) is not of the correct type');}_validateElement(val);}void _validateElement(A_E val){}final List<A_E> _wrappedList;}class ProtobufEnum{final int value;final String name;const ProtobufEnum(this.value,this.name);static Map<int,dynamic> initByValue(List<ProtobufEnum> byIndex){var byValue=new Map<int,A_Dynamic_>();for(ProtobufEnum v in byIndex){byValue[v.value]=v;}return byValue;}int get hashCode=>value;String toString()=>name;}class InvalidProtocolBufferException implements Exception{final String message;InvalidProtocolBufferException.A__(this.message);String toString()=>'InvalidProtocolBufferException: ${message}';InvalidProtocolBufferException.invalidEndTag():this.A__('Protocol message end-group tag did not match expected tag.');InvalidProtocolBufferException.invalidTag():this.A__('Protocol message contained an invalid tag (zero).');InvalidProtocolBufferException.invalidWireType():this.A__('Protocol message tag had invalid wire type.');InvalidProtocolBufferException.malformedVarint():this.A__('CodedBufferReader encountered a malformed varint.');InvalidProtocolBufferException.recursionLimitExceeded():this.A__('''
Protocol message had too many levels of nesting.  May be malicious.
Use CodedBufferReader.setRecursionLimit() to increase the depth limit.
''');InvalidProtocolBufferException.truncatedMessage():this.A__('''
While parsing a protocol message, the input ended unexpectedly
in the middle of a field.  This could mean either than the
input has been truncated or that an embedded message
misreported its own length.
''');}class CodedBufferReader{static const int DEFAULT_RECURSION_LIMIT=64;static const int DEFAULT_SIZE_LIMIT=64<<20;final E_p.Uint8List A__buffer;int _bufferPos=0;int _currentLimit=-1;int _lastTag=0;int _recursionDepth=0;final int _recursionLimit;final int _sizeLimit;CodedBufferReader(List<int> A_buffer,{int recursionLimit: DEFAULT_RECURSION_LIMIT,int sizeLimit: DEFAULT_SIZE_LIMIT}):A__buffer=new E_p.Uint8List(A_buffer.length)..setRange(0,A_buffer.length,A_buffer),_recursionLimit=recursionLimit,_sizeLimit=D_p.min(sizeLimit,A_buffer.length);void checkLastTagWas(int A_value){if(_lastTag!=A_value){throw new InvalidProtocolBufferException.invalidEndTag();}}bool isAtEnd()=>(_currentLimit!=-1&&_bufferPos>=_currentLimit)||_bufferPos>=A__buffer.length;void _withLimit(int byteLimit,callback){if(byteLimit<0){throw new ArgumentError('CodedBufferReader encountered an embedded string or message' ' which claimed to have negative size.');}byteLimit+= _bufferPos;int oldLimit=_currentLimit;if((oldLimit!=-1&&byteLimit>oldLimit)||byteLimit>_sizeLimit){throw new InvalidProtocolBufferException.truncatedMessage();}_currentLimit=byteLimit;callback();_currentLimit=oldLimit;}int _checkLimit(int increment){_bufferPos+= increment;if((_currentLimit!=-1&&_bufferPos>_currentLimit)||_bufferPos>_sizeLimit){throw new InvalidProtocolBufferException.truncatedMessage();}}void readGroup(int fieldNumber,GeneratedMessage A_message,ExtensionRegistry extensionRegistry){if(_recursionDepth>=_recursionLimit){throw new InvalidProtocolBufferException.recursionLimitExceeded();} ++_recursionDepth;A_message.mergeFromCodedBufferReader(this);checkLastTagWas(makeTag(fieldNumber,WIRETYPE_END_GROUP)); --_recursionDepth;}UnknownFieldSet readUnknownFieldSetGroup(int fieldNumber){if(_recursionDepth>=_recursionLimit){throw new InvalidProtocolBufferException.recursionLimitExceeded();} ++_recursionDepth;UnknownFieldSet unknownFieldSet=new UnknownFieldSet();unknownFieldSet.mergeFromCodedBufferReader(this);checkLastTagWas(makeTag(fieldNumber,WIRETYPE_END_GROUP)); --_recursionDepth;return unknownFieldSet;}void readMessage(GeneratedMessage A_message,ExtensionRegistry extensionRegistry){int A_length=readInt32();if(_recursionDepth>=_recursionLimit){throw new InvalidProtocolBufferException.recursionLimitExceeded();}_withLimit(A_length,(){ ++_recursionDepth;A_message.mergeFromCodedBufferReader(this);checkLastTagWas(0); --_recursionDepth;});}int readEnum()=>readInt32();int readInt32()=>_readRawVarint32();Int64 readInt64()=>_readRawVarint64();int readUint32()=>_readRawVarint32(false);Int64 readUint64()=>_readRawVarint64();int readSint32()=>_decodeZigZag32(readUint32());Int64 readSint64()=>_decodeZigZag64(readUint64());int readFixed32()=>_readByteData(4).getUint32(0,E_p.Endianness.LITTLE_ENDIAN);Int64 readFixed64()=>readSfixed64();int readSfixed32()=>_readByteData(4).getInt32(0,E_p.Endianness.LITTLE_ENDIAN);Int64 readSfixed64(){var A_data=_readByteData(8);var A_view=new E_p.Uint8List.view(A_data.buffer,A_data.offsetInBytes,8);return new Int64.fromBytes(A_view);}bool readBool()=>_readRawVarint32()!=0;List<int> readBytes(){int A_length=readInt32();_checkLimit(A_length);return new E_p.Uint8List.view(A__buffer.buffer,_bufferPos-A_length,A_length);}String readString()=>B_p.UTF8.decode(readBytes(),allowMalformed:true);double readFloat()=>_readByteData(4).getFloat32(0,E_p.Endianness.LITTLE_ENDIAN);double readDouble()=>_readByteData(8).getFloat64(0,E_p.Endianness.LITTLE_ENDIAN);int readTag(){if(isAtEnd()){_lastTag=0;return 0;}_lastTag=readInt32();if(getTagFieldNumber(_lastTag)==0){throw new InvalidProtocolBufferException.invalidTag();}return _lastTag;}static int _decodeZigZag32(int A_value){if((A_value&0x1)==1)A_value=-A_value;return A_value>>1;}static Int64 _decodeZigZag64(Int64 A_value){if((A_value&0x1)==1)A_value=-A_value;return A_value>>1;}int _readRawVarintByte(){_checkLimit(1);return A__buffer[_bufferPos-1];}int _readRawVarint32([bool signed=true]){int result=0;for(int i=0;i<10;i++ ){int byte=_readRawVarintByte();result|= (byte&0x7f)<<(i*7);if((byte&0x80)==0){result&= 0xffffffff;return signed?result-2*(0x80000000&result):result;}}throw new InvalidProtocolBufferException.malformedVarint();}Int64 _readRawVarint64(){int lo=0;int hi=0;for(int i=0;i<4;i++ ){int byte=_readRawVarintByte();lo|= (byte&0x7f)<<(i*7);if((byte&0x80)==0)return new Int64.fromInts(hi,lo);}int byte=_readRawVarintByte();lo|= (byte&0xf)<<28;hi=(byte>>4)&0x7;if((byte&0x80)==0){return new Int64.fromInts(hi,lo);}for(int i=0;i<5;i++ ){int byte=_readRawVarintByte();hi|= (byte&0x7f)<<((i*7)+3);if((byte&0x80)==0)return new Int64.fromInts(hi,lo);}throw new InvalidProtocolBufferException.malformedVarint();}E_p.ByteData _readByteData(int sizeInBytes){_checkLimit(sizeInBytes);return new E_p.ByteData.view(A__buffer.buffer,_bufferPos-sizeInBytes,sizeInBytes);}}class UnknownFieldSet{final Map<int,UnknownFieldSetField> _fields=new Map<int,UnknownFieldSetField>();UnknownFieldSet();UnknownFieldSet._clone(UnknownFieldSet unknownFieldSet){mergeFromUnknownFieldSet(unknownFieldSet);}UnknownFieldSet clone()=>new UnknownFieldSet._clone(this);void clear(){_fields.clear();}UnknownFieldSetField getField(int tagNumber)=>_fields[tagNumber];bool hasField(int tagNumber)=>_fields.containsKey(tagNumber);void mergeField(int number,UnknownFieldSetField field){_getField(number)..varints.addAll(field.varints)..fixed32s.addAll(field.fixed32s)..fixed64s.addAll(field.fixed64s)..lengthDelimited.addAll(field.lengthDelimited)..groups.addAll(field.groups);}bool mergeFieldFromBuffer(int tag,CodedBufferReader A_input){int number=getTagFieldNumber(tag);switch (getTagWireType(tag)){case WIRETYPE_VARINT:mergeVarintField(number,A_input.readInt64());return true;case WIRETYPE_FIXED64:mergeFixed64Field(number,A_input.readFixed64());return true;case WIRETYPE_LENGTH_DELIMITED:mergeLengthDelimitedField(number,A_input.readBytes());return true;case WIRETYPE_START_GROUP:UnknownFieldSet subGroup=A_input.readUnknownFieldSetGroup(number);mergeGroupField(number,subGroup);return true;case WIRETYPE_END_GROUP:return false;case WIRETYPE_FIXED32:mergeFixed32Field(number,A_input.readFixed32());return true;default:throw new InvalidProtocolBufferException.invalidWireType();}}void mergeFromCodedBufferReader(CodedBufferReader A_input){while (true){int tag=A_input.readTag();if(tag==0||!mergeFieldFromBuffer(tag,A_input)){break;}}}void mergeFromUnknownFieldSet(UnknownFieldSet other){for(int A_key in other._fields.keys){mergeField(A_key,other._fields[A_key]);}}_checkFieldNumber(int number){if(number==0){throw new ArgumentError('Zero is not a valid field number.');}}void mergeFixed32Field(int number,int A_value){_getField(number).addFixed32(A_value);}void mergeFixed64Field(int number,Int64 A_value){_getField(number).addFixed64(A_value);}void mergeGroupField(int number,UnknownFieldSet A_value){_getField(number).addGroup(A_value);}void mergeLengthDelimitedField(int number,List<int> A_value){_getField(number).addLengthDelimited(A_value);}void mergeVarintField(int number,Int64 A_value){_getField(number).addVarint(A_value);}UnknownFieldSetField _getField(int number){_checkFieldNumber(number);return _fields.putIfAbsent(number,()=>new UnknownFieldSetField());}bool operator==(other){if(other is !UnknownFieldSet)return false;UnknownFieldSet o=other;return _areMapsEqual(o._fields,_fields);}int get hashCode=>_fields.hashCode;String toString()=>_toString('');String _toString(String indent){var stringBuffer=new StringBuffer();for(int tag in sorted(_fields.keys)){var field=_fields[tag];for(var A_value in field.values){if(A_value is UnknownFieldSet){stringBuffer..write('${indent}${tag}: {\n')..write(A_value._toString('${indent}  '))..write('${indent}}\n');}else{if(A_value is E_p.ByteData){A_value=A_value.getUint64(0,E_p.Endianness.LITTLE_ENDIAN);}stringBuffer.write('${indent}${tag}: ${A_value}\n');}}}return stringBuffer.toString();}void writeToCodedBufferWriter(CodedBufferWriter output){for(int A_key in _fields.keys){_fields[A_key].writeTo(A_key,output);}}}typedef GeneratedMessage CreateBuilderFunc();const int TAG_TYPE_MASK=(1<<TAG_TYPE_BITS)-1;class BuilderInfo{final String messageName;final Map<int,FieldInfo> fieldInfo=new Map<int,FieldInfo>();final Map<String,FieldInfo> byName=<String,FieldInfo>{};bool hasExtensions=false;bool hasRequiredFields=true;BuilderInfo(this.messageName);void add(int A_tagNumber,String A_name,int A_fieldType,MakeDefaultFunc A_makeDefault,CreateBuilderFunc A_subBuilder,ValueOfFunc B_valueOf){fieldInfo[A_tagNumber]=byName[A_name]=new FieldInfo(A_name,A_tagNumber,A_fieldType,A_makeDefault,A_subBuilder,B_valueOf);}void a(int A_tagNumber,String A_name,int A_fieldType,[MakeDefaultFunc A_makeDefault,CreateBuilderFunc A_subBuilder,ValueOfFunc B_valueOf]){add(A_tagNumber,A_name,A_fieldType,A_makeDefault,A_subBuilder,B_valueOf);}void e(int A_tagNumber,String A_name,int A_fieldType,MakeDefaultFunc A_makeDefault,ValueOfFunc B_valueOf){add(A_tagNumber,A_name,A_fieldType,A_makeDefault,null,B_valueOf);}void m(int A_tagNumber,String A_name,CreateBuilderFunc A_subBuilder,MakeDefaultFunc A_makeDefault){add(A_tagNumber,A_name,GeneratedMessage._REPEATED_MESSAGE,A_makeDefault,A_subBuilder,null);}void F_p(int A_tagNumber,String A_name,int A_fieldType){MakeDefaultFunc A_makeDefault;switch (A_fieldType&~0x7){case GeneratedMessage._BOOL_BIT:A_makeDefault=()=>new PbList<bool>();break;case GeneratedMessage._BYTES_BIT:A_makeDefault=()=>new PbList<List<int>>();break;case GeneratedMessage._STRING_BIT:A_makeDefault=()=>new PbList<String>();break;case GeneratedMessage._FLOAT_BIT:A_makeDefault=()=>new PbFloatList();break;case GeneratedMessage._DOUBLE_BIT:A_makeDefault=()=>new PbList<double>();break;case GeneratedMessage._ENUM_BIT:A_makeDefault=()=>new PbList<ProtobufEnum>();break;case GeneratedMessage._INT32_BIT:case GeneratedMessage._SINT32_BIT:case GeneratedMessage._SFIXED32_BIT:A_makeDefault=()=>new PbSint32List();break;case GeneratedMessage._UINT32_BIT:case GeneratedMessage._FIXED32_BIT:A_makeDefault=()=>new PbUint32List();break;case GeneratedMessage._INT64_BIT:case GeneratedMessage._SINT64_BIT:case GeneratedMessage._SFIXED64_BIT:A_makeDefault=()=>new PbSint64List();break;case GeneratedMessage._UINT64_BIT:case GeneratedMessage._FIXED64_BIT:A_makeDefault=()=>new PbUint64List();break;case GeneratedMessage._MESSAGE_BIT:throw new ArgumentError('use BuilderInfo.m() for repeated messages');default:throw new ArgumentError('unknown type ${A_fieldType}');}add(A_tagNumber,A_name,A_fieldType,A_makeDefault,null,null);}bool containsTagNumber(int A_tagNumber)=>fieldInfo.containsKey(A_tagNumber);defaultValue(int A_tagNumber){MakeDefaultFunc func=makeDefault(A_tagNumber);return func==null?null:func();}String fieldName(int A_tagNumber){FieldInfo i=fieldInfo[A_tagNumber];return i!=null?i.name:null;}int fieldType(int A_tagNumber){FieldInfo i=fieldInfo[A_tagNumber];return i!=null?i.type:null;}MakeDefaultFunc makeDefault(int A_tagNumber){FieldInfo i=fieldInfo[A_tagNumber];return i!=null?i.makeDefault:null;}CreateBuilderFunc subBuilder(int A_tagNumber){FieldInfo i=fieldInfo[A_tagNumber];return i!=null?i.subBuilder:null;}int tagNumber(String A_fieldName){FieldInfo i=byName[A_fieldName];return i!=null?i.tagNumber:null;}ValueOfFunc valueOfFunc(int A_tagNumber){FieldInfo i=fieldInfo[A_tagNumber];return i!=null?i.valueOf:null;}}class Extension extends FieldInfo{}class FieldInfo{final String name;final int tagNumber;final int type;final MakeDefaultFunc makeDefault;final CreateBuilderFunc subBuilder;final ValueOfFunc valueOf;FieldInfo(this.name,this.tagNumber,int A_type,[MakeDefaultFunc A_makeDefault,this.subBuilder,this.valueOf]):this.type=A_type,this.makeDefault=A_makeDefault==null?GeneratedMessage._defaultForType(A_type):A_makeDefault;String toString()=>name;}typedef Object MakeDefaultFunc();bool _deepEquals(lhs,rhs){if((lhs is List)&&(rhs is List))return _areListsEqual(lhs,rhs);if((lhs is Map)&&(rhs is Map))return _areMapsEqual(lhs,rhs);if((lhs is E_p.ByteData)&&(rhs is E_p.ByteData)){return _areByteDataEqual(lhs,rhs);}return lhs==rhs;}const int WIRETYPE_VARINT=0;class ExtensionRegistry{final Map<String,Map<int,Extension>> _extensions=<String,Map<int,Extension>>{};static const ExtensionRegistry EMPTY=const _EmptyExtensionRegistry();void add(Extension extension){var A_map=_extensions.putIfAbsent(extension.extendee,()=>new Map<int,Extension>());A_map[extension.tagNumber]=extension;}Extension getExtension(String messageName,int tagNumber){var A_map=_extensions[messageName];if(A_map!=null){return A_map[tagNumber];}return null;}}typedef ProtobufEnum ValueOfFunc(int value);const int WIRETYPE_FIXED64=1;_inRange(A_min,A_value,A_max)=>(A_min<=A_value)&&(A_value<=A_max);const int WIRETYPE_LENGTH_DELIMITED=2;const int WIRETYPE_START_GROUP=3;_isSigned32(int A_value)=>_inRange(-2147483648,A_value,2147483647);const int WIRETYPE_END_GROUP=4;const int WIRETYPE_FIXED32=5;_isUnsigned32(int A_value)=>_inRange(0,A_value,4294967295);int getTagFieldNumber(int tag)=>(tag&0x7fffffff)>>TAG_TYPE_BITS;_isSigned64(Int64 A_value)=>_isUnsigned64(A_value);bool _areListsEqual(List lhs,List rhs){A_range(i)=>new Iterable.generate(i,(i)=>i);if(lhs.length!=rhs.length)return false;return A_range(lhs.length).every((i)=>_deepEquals(lhs[i],rhs[i]));}int getTagWireType(int tag)=>tag&TAG_TYPE_MASK;_isUnsigned64(Int64 A_value)=>A_value is Int64;_isFloat32(double A_value)=>A_value.isNaN||A_value.isInfinite||_inRange(-3.4028234663852886E38,A_value,3.4028234663852886E38);int makeTag(int fieldNumber,int tag)=>(fieldNumber<<TAG_TYPE_BITS)|tag;makeLongInt(n)=>new Int64(n);abstract class GeneratedMessage{static const int _REQUIRED_BIT=0x1;static const int _REPEATED_BIT=0x2;static const int _PACKED_BIT=0x4;static const int _BOOL_BIT=0x10;static const int _BYTES_BIT=0x20;static const int _STRING_BIT=0x40;static const int _DOUBLE_BIT=0x80;static const int _FLOAT_BIT=0x100;static const int _ENUM_BIT=0x200;static const int _GROUP_BIT=0x400;static const int _INT32_BIT=0x800;static const int _INT64_BIT=0x1000;static const int _SINT32_BIT=0x2000;static const int _SINT64_BIT=0x4000;static const int _UINT32_BIT=0x8000;static const int _UINT64_BIT=0x10000;static const int _FIXED32_BIT=0x20000;static const int _FIXED64_BIT=0x40000;static const int _SFIXED32_BIT=0x80000;static const int _SFIXED64_BIT=0x100000;static const int _MESSAGE_BIT=0x200000;static const int _OPTIONAL_BOOL=_BOOL_BIT;static const int _OPTIONAL_BYTES=_BYTES_BIT;static const int _OPTIONAL_STRING=_STRING_BIT;static const int _OPTIONAL_FLOAT=_FLOAT_BIT;static const int _OPTIONAL_DOUBLE=_DOUBLE_BIT;static const int _OPTIONAL_ENUM=_ENUM_BIT;static const int _OPTIONAL_GROUP=_GROUP_BIT;static const int _OPTIONAL_INT32=_INT32_BIT;static const int _OPTIONAL_INT64=_INT64_BIT;static const int _OPTIONAL_SINT32=_SINT32_BIT;static const int _OPTIONAL_SINT64=_SINT64_BIT;static const int _OPTIONAL_UINT32=_UINT32_BIT;static const int _OPTIONAL_UINT64=_UINT64_BIT;static const int _OPTIONAL_FIXED32=_FIXED32_BIT;static const int _OPTIONAL_FIXED64=_FIXED64_BIT;static const int _OPTIONAL_SFIXED32=_SFIXED32_BIT;static const int _OPTIONAL_SFIXED64=_SFIXED64_BIT;static const int _OPTIONAL_MESSAGE=_MESSAGE_BIT;static const int _REQUIRED_BOOL=_REQUIRED_BIT|_BOOL_BIT;static const int _REQUIRED_BYTES=_REQUIRED_BIT|_BYTES_BIT;static const int _REQUIRED_STRING=_REQUIRED_BIT|_STRING_BIT;static const int _REQUIRED_FLOAT=_REQUIRED_BIT|_FLOAT_BIT;static const int _REQUIRED_DOUBLE=_REQUIRED_BIT|_DOUBLE_BIT;static const int _REQUIRED_INT32=_REQUIRED_BIT|_INT32_BIT;static const int _REQUIRED_INT64=_REQUIRED_BIT|_INT64_BIT;static const int _REQUIRED_SINT32=_REQUIRED_BIT|_SINT32_BIT;static const int _REQUIRED_SINT64=_REQUIRED_BIT|_SINT64_BIT;static const int _REQUIRED_UINT32=_REQUIRED_BIT|_UINT32_BIT;static const int _REQUIRED_UINT64=_REQUIRED_BIT|_UINT64_BIT;static const int _REQUIRED_FIXED32=_REQUIRED_BIT|_FIXED32_BIT;static const int _REQUIRED_FIXED64=_REQUIRED_BIT|_FIXED64_BIT;static const int _REQUIRED_SFIXED32=_REQUIRED_BIT|_SFIXED32_BIT;static const int _REQUIRED_SFIXED64=_REQUIRED_BIT|_SFIXED64_BIT;static const int _REPEATED_BOOL=_REPEATED_BIT|_BOOL_BIT;static const int _REPEATED_BYTES=_REPEATED_BIT|_BYTES_BIT;static const int _REPEATED_STRING=_REPEATED_BIT|_STRING_BIT;static const int _REPEATED_FLOAT=_REPEATED_BIT|_FLOAT_BIT;static const int _REPEATED_DOUBLE=_REPEATED_BIT|_DOUBLE_BIT;static const int _REPEATED_ENUM=_REPEATED_BIT|_ENUM_BIT;static const int _REPEATED_GROUP=_REPEATED_BIT|_GROUP_BIT;static const int _REPEATED_INT32=_REPEATED_BIT|_INT32_BIT;static const int _REPEATED_INT64=_REPEATED_BIT|_INT64_BIT;static const int _REPEATED_SINT32=_REPEATED_BIT|_SINT32_BIT;static const int _REPEATED_SINT64=_REPEATED_BIT|_SINT64_BIT;static const int _REPEATED_UINT32=_REPEATED_BIT|_UINT32_BIT;static const int _REPEATED_UINT64=_REPEATED_BIT|_UINT64_BIT;static const int _REPEATED_FIXED32=_REPEATED_BIT|_FIXED32_BIT;static const int _REPEATED_FIXED64=_REPEATED_BIT|_FIXED64_BIT;static const int _REPEATED_SFIXED32=_REPEATED_BIT|_SFIXED32_BIT;static const int _REPEATED_SFIXED64=_REPEATED_BIT|_SFIXED64_BIT;static const int _REPEATED_MESSAGE=_REPEATED_BIT|_MESSAGE_BIT;static const int _PACKED_INT32=_REPEATED_BIT|_PACKED_BIT|_INT32_BIT;static const int OB=_OPTIONAL_BOOL;static const int OY=_OPTIONAL_BYTES;static const int OS=_OPTIONAL_STRING;static const int OD=_OPTIONAL_DOUBLE;static const int OE=_OPTIONAL_ENUM;static const int O3=_OPTIONAL_INT32;static const int O6=_OPTIONAL_INT64;static const int OU6=_OPTIONAL_UINT64;static const int OM=_OPTIONAL_MESSAGE;static const int QB=_REQUIRED_BOOL;static const int QS=_REQUIRED_STRING;static const int PS=_REPEATED_STRING;static const int P3=_REPEATED_INT32;static const int K3=_PACKED_INT32;static String _STRING_EMPTY()=>'';static List<int> _BYTES_EMPTY()=>new PbList<int>();static bool _BOOL_FALSE()=>false;static int _INT_ZERO()=>0;static double _DOUBLE_ZERO()=>0.0;static MakeDefaultFunc _defaultForType(int A_type){switch (A_type){case _OPTIONAL_BOOL:case _REQUIRED_BOOL:return _BOOL_FALSE;case _OPTIONAL_BYTES:case _REQUIRED_BYTES:return _BYTES_EMPTY;case _OPTIONAL_STRING:case _REQUIRED_STRING:return _STRING_EMPTY;case _OPTIONAL_FLOAT:case _REQUIRED_FLOAT:case _OPTIONAL_DOUBLE:case _REQUIRED_DOUBLE:return _DOUBLE_ZERO;case _OPTIONAL_INT32:case _REQUIRED_INT32:case _OPTIONAL_INT64:case _REQUIRED_INT64:case _OPTIONAL_SINT32:case _REQUIRED_SINT32:case _OPTIONAL_SINT64:case _REQUIRED_SINT64:case _OPTIONAL_UINT32:case _REQUIRED_UINT32:case _OPTIONAL_UINT64:case _REQUIRED_UINT64:case _OPTIONAL_FIXED32:case _REQUIRED_FIXED32:case _OPTIONAL_FIXED64:case _REQUIRED_FIXED64:case _OPTIONAL_SFIXED32:case _REQUIRED_SFIXED32:case _OPTIONAL_SFIXED64:case _REQUIRED_SFIXED64:return _INT_ZERO;default:return null;}}final Map<int,dynamic> _fieldValues=new Map<int,A_Dynamic_>();final Map<int,Extension> _extensions=new Map<int,Extension>();final UnknownFieldSet unknownFields=new UnknownFieldSet();GeneratedMessage();GeneratedMessage.fromBuffer(List<int> A_input,ExtensionRegistry extensionRegistry){mergeFromBuffer(A_input,extensionRegistry);}void clear(){unknownFields.clear();_fieldValues.clear();}bool operator==(other){if(other is !GeneratedMessage)return false;GeneratedMessage o=other;if(o.info_!=info_)return false;if(!_areMapsEqual(o._fieldValues,_fieldValues))return false;if(o.unknownFields!=unknownFields)return false;return true;}int get hashCode=>_fieldValues.hashCode;String toString()=>_toString('');String _toString(String indent){StringBuffer s=new StringBuffer();void renderValue(A_key,A_value){if(A_value is GeneratedMessage){s.write('${indent}${A_key}: {\n');s.write(A_value._toString('${indent}  '));s.write('${indent}}\n');}else{s.write('${indent}${A_key}: ${A_value}\n');}}List<FieldInfo> fields=new List<FieldInfo>.from(info_.fieldInfo.values)..sort((a,b)=>a.tagNumber.compareTo(b.tagNumber));for(FieldInfo field in fields){if(hasField(field.tagNumber)){var fieldValue=_fieldValues[field.tagNumber];if(fieldValue is E_p.ByteData){final A_value=fieldValue.getUint64(0,E_p.Endianness.LITTLE_ENDIAN);renderValue(field.name,A_value);}else if(fieldValue is List){for(var A_value in fieldValue){renderValue(field.name,A_value);}}else{renderValue(field.name,fieldValue);}}}s.write(unknownFields.toString());return s.toString();}BuilderInfo get info_;E_p.Uint8List writeToBuffer(){CodedBufferWriter out=new CodedBufferWriter();writeToCodedBufferWriter(out);return out.toBuffer();}void writeToCodedBufferWriter(CodedBufferWriter output){for(int tagNumber in sorted(_fieldValues.keys)){var fieldValue=_fieldValues[tagNumber];int fieldType=_getFieldType(tagNumber);output.writeField(tagNumber,fieldType,fieldValue);}unknownFields.writeToCodedBufferWriter(output);}void mergeFromCodedBufferReader(CodedBufferReader A_input,[ExtensionRegistry extensionRegistry=ExtensionRegistry.EMPTY]){void readPackableIoc(int wireType,int tagNumber,var iocReadFunc){List A_list=getField(tagNumber);if(wireType==WIRETYPE_LENGTH_DELIMITED){A_input._withLimit(A_input.readInt32(),(){while (!A_input.isAtEnd()){iocReadFunc(A_list.add);}});}else{iocReadFunc(A_list.add);}}void readPackable(int wireType,int tagNumber,var readFunc){readPackableIoc(wireType,tagNumber,(var assigner)=>assigner(readFunc()));}bool wireTypeMatch(int tagNumber,int fieldType,int wireType){int fieldDataType=fieldType&~(_REQUIRED_BIT|_REPEATED_BIT|_PACKED_BIT);switch (fieldDataType){case _BOOL_BIT:case _ENUM_BIT:case _INT32_BIT:case _INT64_BIT:case _SINT32_BIT:case _SINT64_BIT:case _UINT32_BIT:case _UINT64_BIT:return wireType==WIRETYPE_VARINT||wireType==WIRETYPE_LENGTH_DELIMITED;case _FLOAT_BIT:case _FIXED32_BIT:case _SFIXED32_BIT:return wireType==WIRETYPE_FIXED32||wireType==WIRETYPE_LENGTH_DELIMITED;case _DOUBLE_BIT:case _FIXED64_BIT:case _SFIXED64_BIT:return wireType==WIRETYPE_FIXED64||wireType==WIRETYPE_LENGTH_DELIMITED;case _BYTES_BIT:case _STRING_BIT:case _MESSAGE_BIT:return wireType==WIRETYPE_LENGTH_DELIMITED;case _GROUP_BIT:return wireType==WIRETYPE_START_GROUP;default:return false;}}while (true){int tag=A_input.readTag();if(tag==0){return;}int wireType=tag&0x7;int tagNumber=tag>>3;int fieldType=-1;if(info_.containsTagNumber(tagNumber)){fieldType=info_.fieldType(tagNumber);}else{Extension extension=extensionRegistry.getExtension(info_.messageName,tagNumber);if(extension!=null){_addExtensionToMap(extension);fieldType=extension.type;}}if(fieldType==-1||!wireTypeMatch(tagNumber,fieldType,wireType)){if(!unknownFields.mergeFieldFromBuffer(tag,A_input)){return;}else{continue;}}fieldType&= ~(_PACKED_BIT|_REQUIRED_BIT);switch (fieldType){case _OPTIONAL_BOOL:_fieldValues[tagNumber]=A_input.readBool();break;case _OPTIONAL_BYTES:_fieldValues[tagNumber]=A_input.readBytes();break;case _OPTIONAL_STRING:_fieldValues[tagNumber]=A_input.readString();break;case _OPTIONAL_FLOAT:_fieldValues[tagNumber]=A_input.readFloat();break;case _OPTIONAL_DOUBLE:_fieldValues[tagNumber]=A_input.readDouble();break;case _OPTIONAL_ENUM:int rawValue=A_input.readEnum();var A_value=_getValueOfFunc(tagNumber,extensionRegistry)(rawValue);if(A_value==null){unknownFields.mergeVarintField(tagNumber,makeLongInt(rawValue));}else{_fieldValues[tagNumber]=A_value;}break;case _OPTIONAL_GROUP:GeneratedMessage subMessage=_getEmptyMessage(tagNumber,extensionRegistry);if(_fieldValues.containsKey(tagNumber)){subMessage.mergeFromMessage(getField(tagNumber));}A_input.readGroup(tagNumber,subMessage,extensionRegistry);_fieldValues[tagNumber]=subMessage;break;case _OPTIONAL_INT32:_fieldValues[tagNumber]=A_input.readInt32();break;case _OPTIONAL_INT64:_fieldValues[tagNumber]=A_input.readInt64();break;case _OPTIONAL_SINT32:_fieldValues[tagNumber]=A_input.readSint32();break;case _OPTIONAL_SINT64:_fieldValues[tagNumber]=A_input.readSint64();break;case _OPTIONAL_UINT32:_fieldValues[tagNumber]=A_input.readUint32();break;case _OPTIONAL_UINT64:_fieldValues[tagNumber]=A_input.readUint64();break;case _OPTIONAL_FIXED32:_fieldValues[tagNumber]=A_input.readFixed32();break;case _OPTIONAL_FIXED64:_fieldValues[tagNumber]=A_input.readFixed64();break;case _OPTIONAL_SFIXED32:_fieldValues[tagNumber]=A_input.readSfixed32();break;case _OPTIONAL_SFIXED64:_fieldValues[tagNumber]=A_input.readSfixed64();break;case _OPTIONAL_MESSAGE:GeneratedMessage subMessage=_getEmptyMessage(tagNumber,extensionRegistry);if(_fieldValues.containsKey(tagNumber)){subMessage.mergeFromMessage(getField(tagNumber));}A_input.readMessage(subMessage,extensionRegistry);_fieldValues[tagNumber]=subMessage;break;case _REPEATED_BOOL:readPackable(wireType,tagNumber,A_input.readBool);break;case _REPEATED_BYTES:List A_list=getField(tagNumber);A_list.add(A_input.readBytes());break;case _REPEATED_STRING:List A_list=getField(tagNumber);A_list.add(A_input.readString());break;case _REPEATED_FLOAT:readPackable(wireType,tagNumber,A_input.readFloat);break;case _REPEATED_DOUBLE:readPackable(wireType,tagNumber,A_input.readDouble);break;case _REPEATED_ENUM:readPackableIoc(wireType,tagNumber,(var assigner){int rawValue=A_input.readEnum();var A_value=_getValueOfFunc(tagNumber,extensionRegistry)(rawValue);if(A_value==null){unknownFields.mergeVarintField(tagNumber,makeLongInt(rawValue));}else{assigner(A_value);}});break;case _REPEATED_GROUP:GeneratedMessage subMessage=_getEmptyMessage(tagNumber,extensionRegistry);A_input.readGroup(tagNumber,subMessage,extensionRegistry);List A_list=getField(tagNumber);A_list.add(subMessage);break;case _REPEATED_INT32:readPackable(wireType,tagNumber,A_input.readInt32);break;case _REPEATED_INT64:readPackable(wireType,tagNumber,A_input.readInt64);break;case _REPEATED_SINT32:readPackable(wireType,tagNumber,A_input.readSint32);break;case _REPEATED_SINT64:readPackable(wireType,tagNumber,A_input.readSint64);break;case _REPEATED_UINT32:readPackable(wireType,tagNumber,A_input.readUint32);break;case _REPEATED_UINT64:readPackable(wireType,tagNumber,A_input.readUint64);break;case _REPEATED_FIXED32:readPackable(wireType,tagNumber,A_input.readFixed32);break;case _REPEATED_FIXED64:readPackable(wireType,tagNumber,A_input.readFixed64);break;case _REPEATED_SFIXED32:readPackable(wireType,tagNumber,A_input.readSfixed32);break;case _REPEATED_SFIXED64:readPackable(wireType,tagNumber,A_input.readSfixed64);break;case _REPEATED_MESSAGE:GeneratedMessage subMessage=_getEmptyMessage(tagNumber,extensionRegistry);A_input.readMessage(subMessage,extensionRegistry);List A_list=getField(tagNumber);A_list.add(subMessage);break;default:throw 'Unknown field type ${fieldType}';}}}void mergeFromBuffer(List<int> A_input,[ExtensionRegistry extensionRegistry=ExtensionRegistry.EMPTY]){CodedBufferReader codedInput=new CodedBufferReader(A_input);mergeFromCodedBufferReader(codedInput,extensionRegistry);codedInput.checkLastTagWas(0);}getField(int tagNumber){var A_value=_fieldValues[tagNumber];if(A_value==null){MakeDefaultFunc makeDefaultFunc=info_.makeDefault(tagNumber);if(makeDefaultFunc==null){makeDefaultFunc=_extensions[tagNumber].makeDefault;}A_value=makeDefaultFunc();if(A_value is List){_fieldValues[tagNumber]=A_value;}}return A_value;}bool hasField(int tagNumber){if(!_fieldValues.containsKey(tagNumber)){return false;}var A_value=_fieldValues[tagNumber];if(A_value is List&&A_value.isEmpty){return false;}return true;}void mergeFromMessage(GeneratedMessage other){for(int tagNumber in other._fieldValues.keys){var fieldValue=other._fieldValues[tagNumber];if(other._extensions.containsKey(tagNumber)){_addExtensionToMap(other._extensions[tagNumber]);}int fieldType=other._getFieldType(tagNumber);var cloner=(A_x)=>A_x;if((fieldType&(_GROUP_BIT|_MESSAGE_BIT))!=0){cloner=(A_message)=>A_message.clone();}if((fieldType&_REPEATED_BIT)!=0){getField(tagNumber).addAll(new List.from(fieldValue).map(cloner));}else{setField(tagNumber,cloner(fieldValue),fieldType);}}mergeUnknownFields(other.unknownFields);}void mergeUnknownFields(UnknownFieldSet unknownFieldSet){unknownFields.mergeFromUnknownFieldSet(unknownFieldSet);}void setField(int tagNumber,var A_value,[int fieldType=null]){if(A_value==null){throw new ArgumentError('value is null');}if(fieldType==null){if(!info_.containsTagNumber(tagNumber)){throw new ArgumentError('Unknown tag: ${tagNumber}');}fieldType=info_.fieldType(tagNumber);}if((fieldType&_REPEATED_BIT)!=0){throw new ArgumentError(_generateMessage(tagNumber,A_value,'repeating field (use get + .add())'));}_validate(tagNumber,fieldType&~0x7,A_value);_fieldValues[tagNumber]=A_value;}void _addExtensionToMap(Extension extension){_extensions[extension.tagNumber]=extension;}int _getFieldType(int tagNumber){int A_type=info_.fieldType(tagNumber);if(A_type==null&&_extensions.containsKey(tagNumber)){A_type=_extensions[tagNumber].type;}return A_type;}GeneratedMessage _getEmptyMessage(int tagNumber,ExtensionRegistry extensionRegistry){CreateBuilderFunc subBuilderFunc=info_.subBuilder(tagNumber);if(subBuilderFunc==null&&extensionRegistry!=null){subBuilderFunc=extensionRegistry.getExtension(info_.messageName,tagNumber).subBuilder;}return subBuilderFunc();}ValueOfFunc _getValueOfFunc(int tagNumber,ExtensionRegistry extensionRegistry){ValueOfFunc valueOfFunc=info_.valueOfFunc(tagNumber);if(valueOfFunc==null&&extensionRegistry!=null){valueOfFunc=extensionRegistry.getExtension(info_.messageName,tagNumber).valueOf;}return valueOfFunc;}String _generateMessage(int tagNumber,var A_value,String detail){String fieldName;if(_extensions[tagNumber]!=null){fieldName=_extensions[tagNumber].name;}else{fieldName=info_.fieldName(tagNumber);}String A_messageType=info_.messageName;return 'Illegal to set field ${fieldName} (${tagNumber}) of ${A_messageType}' ' to value (${A_value}): ${detail}';}void _validate(int tagNumber,int fieldType,var A_value){switch (fieldType){case _BOOL_BIT:if(A_value is !bool){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not type bool'));}break;case _BYTES_BIT:if(A_value is !List<int>){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not List<int>'));}break;case _STRING_BIT:if(A_value is !String){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not type String'));}break;case _FLOAT_BIT:if(A_value is !double){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not type double'));}if(!_isFloat32(A_value)){throw new ArgumentError(_generateMessage(tagNumber,A_value,'out of range for float'));}break;case _DOUBLE_BIT:if(A_value is !double){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not type double'));}break;case _ENUM_BIT:if(A_value is !ProtobufEnum){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not type ProtobufEnum'));}break;case _INT32_BIT:if(A_value is !int){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not type int'));}if(!_isSigned32(A_value)){throw new ArgumentError(_generateMessage(tagNumber,A_value,'out of range for int32'));}break;case _INT64_BIT:if(A_value is !Int64){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not Int64'));}if(!_isSigned64(A_value)){throw new ArgumentError(_generateMessage(tagNumber,A_value,'out of range for int64'));}break;case _SINT32_BIT:if(A_value is !int){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not type int'));}if(!_isSigned32(A_value)){throw new ArgumentError(_generateMessage(tagNumber,A_value,'out of range for sint32'));}break;case _SINT64_BIT:if(A_value is !Int64){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not Int64'));}if(!_isSigned64(A_value)){throw new ArgumentError(_generateMessage(tagNumber,A_value,'out of range for sint64'));}break;case _UINT32_BIT:if(A_value is !int){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not type int'));}if(!_isUnsigned32(A_value)){throw new ArgumentError(_generateMessage(tagNumber,A_value,'out of range for uint32'));}break;case _UINT64_BIT:if(A_value is !Int64){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not Int64'));}if(!_isUnsigned64(A_value)){throw new ArgumentError(_generateMessage(tagNumber,A_value,'out of range for uint64'));}break;case _FIXED32_BIT:if(A_value is !int){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not type int'));}if(!_isUnsigned32(A_value)){throw new ArgumentError(_generateMessage(tagNumber,A_value,'out of range for fixed32'));}break;case _FIXED64_BIT:if(A_value is !Int64){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not Int64'));}if(!_isUnsigned64(A_value)){throw new ArgumentError(_generateMessage(tagNumber,A_value,'out of range for fixed64'));}break;case _SFIXED32_BIT:if(A_value is !int){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not type int'));}if(!_isSigned32(A_value)){throw new ArgumentError(_generateMessage(tagNumber,A_value,'out of range for sfixed32'));}break;case _SFIXED64_BIT:if(A_value is !Int64){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not Int64'));}if(!_isSigned64(A_value)){throw new ArgumentError(_generateMessage(tagNumber,A_value,'out of range for sfixed64'));}break;case _GROUP_BIT:case _MESSAGE_BIT:if(A_value is !GeneratedMessage){throw new ArgumentError(_generateMessage(tagNumber,A_value,'not a GeneratedMessage'));}break;default:throw new ArgumentError(_generateMessage(tagNumber,A_value,'field has unknown type ' '${fieldType}'));}}}bool _areMapsEqual(Map lhs,Map rhs){if(lhs.length!=rhs.length)return false;return lhs.keys.every((A_key)=>_deepEquals(lhs[A_key],rhs[A_key]));}bool _areByteDataEqual(E_p.ByteData lhs,E_p.ByteData rhs){asBytes(d)=>new E_p.Uint8List.view(d.buffer,d.offsetInBytes,d.lengthInBytes);return _areListsEqual(asBytes(lhs),asBytes(rhs));}class _EmptyExtensionRegistry implements ExtensionRegistry{const _EmptyExtensionRegistry();void add(Extension extension){throw new UnsupportedError('Immutable ExtensionRegistry');}Extension getExtension(String messageName,int tagNumber)=>null;}List sorted(Iterable A_list)=>new List.from(A_list)..sort();class PbSint32List extends PbList<int>{void _validateElement(int val){if(!_isSigned32(val)){throw new ArgumentError('Illegal to add value (${val}): out ' 'of range for int32');}}}class UnknownFieldSetField{final List<List<int>> lengthDelimited=<List<int>>[] ;final List<Int64> varints=<Int64>[] ;final List<int> fixed32s=<int>[] ;final List<Int64> fixed64s=<Int64>[] ;final List<UnknownFieldSet> groups=<UnknownFieldSet>[] ;bool operator==(other){if(other is !UnknownFieldSetField)return false;UnknownFieldSetField o=other;if(lengthDelimited.length!=o.lengthDelimited.length)return false;for(int i=0;i<lengthDelimited.length;i++ ){if(!_areListsEqual(o.lengthDelimited[i],lengthDelimited[i])){return false;}}if(!_areListsEqual(o.varints,varints))return false;if(!_areListsEqual(o.fixed32s,fixed32s))return false;if(!_areListsEqual(o.fixed64s,fixed64s))return false;if(!_areListsEqual(o.groups,groups))return false;return true;}int get hashCode=>lengthDelimited.hashCode;List get values=>[] ..addAll(lengthDelimited)..addAll(varints)..addAll(fixed32s)..addAll(fixed64s)..addAll(groups);void writeTo(int fieldNumber,CodedBufferWriter output){A_write(A_type,A_value){output.writeField(fieldNumber,A_type,A_value);}A_write(GeneratedMessage._REPEATED_UINT64,varints);A_write(GeneratedMessage._REPEATED_FIXED32,fixed32s);A_write(GeneratedMessage._REPEATED_FIXED64,fixed64s);A_write(GeneratedMessage._REPEATED_BYTES,lengthDelimited);A_write(GeneratedMessage._REPEATED_GROUP,groups);}void addGroup(UnknownFieldSet A_value){groups.add(A_value);}void addLengthDelimited(List<int> A_value){lengthDelimited.add(A_value);}void addFixed32(int A_value){fixed32s.add(A_value);}void addFixed64(Int64 A_value){fixed64s.add(A_value);}void addVarint(Int64 A_value){varints.add(A_value);}int get length=>values.length;}class PbUint32List extends PbList<int>{void _validateElement(int val){if(!_isUnsigned32(val)){throw new ArgumentError('Illegal to add value (${val}):' ' out of range for uint32');}}}class PbSint64List extends PbList<Int64>{void _validateElement(Int64 val){if(!_isSigned64(val)){throw new ArgumentError('Illegal to add value (${val}):' ' out of range for sint64');}}}class PbUint64List extends PbList<Int64>{void _validateElement(Int64 val){if(!_isUnsigned64(val)){throw new ArgumentError('Illegal to add value (${val}):' ' out of range for uint64');}}}class PbFloatList extends PbList<double>{void _validateElement(double val){if(!_isFloat32(val)){throw new ArgumentError('Illegal to add value (${val}):' ' out of range for float');}}}abstract class ProtobufContainer{String get fqname;String get classname;}class ExtensionGenerator implements ProtobufContainer{final String fqname;final FieldDescriptorProto _descriptor;final ProtobufContainer _parent;final GenerationContext _context;ExtensionGenerator(FieldDescriptorProto descriptor,ProtobufContainer A_parent,GenerationContext context):this._descriptor=descriptor,this._parent=A_parent,this._context=context,fqname=A_parent.fqname=='.'?'.${descriptor.name}':'${A_parent.fqname}.${descriptor.name}';String get classname{String A_name=new ProtobufField(_descriptor,_parent,_context).externalFieldName;return _parent is MessageGenerator?'${_parent.classname}.${A_name}':A_name;}void generate(IndentingWriter out){ProtobufField field=new ProtobufField(_descriptor,_parent,_context);String baseType=field.baseType;String A_name=field.externalFieldName;String A_type=field.shortTypeName;String typeName='';ProtobufContainer typeNameContainer=_context[_descriptor.typeName];if(typeNameContainer!=null){typeName=typeNameContainer.classname;}String extendee='';ProtobufContainer extendeeContainer=_context[_descriptor.extendee];if(extendeeContainer!=null){extendee=extendeeContainer.classname;}String initializer='';String A_builder='';String B_valueOf='';if(_descriptor.type==FieldDescriptorProto_Type.TYPE_MESSAGE||_descriptor.type==FieldDescriptorProto_Type.TYPE_GROUP){if(_descriptor.label==FieldDescriptorProto_Label.LABEL_REPEATED){initializer=',${A_SP}()${A_SP}=>${A_SP}new PbList<${typeName}>()';A_builder=',${A_SP}()${A_SP}=>${A_SP}new ${typeName}()';}else{initializer=',${A_SP}()${A_SP}=>${A_SP}new ${typeName}()';A_builder=',${A_SP}()${A_SP}=>${A_SP}new ${typeName}()';}}else{if(_descriptor.label==FieldDescriptorProto_Label.LABEL_REPEATED){initializer=',${A_SP}()${A_SP}=>${A_SP}new PbList<${baseType}>()';}else if(field.hasInitialization){initializer=',${A_SP}${field.initialization}';}}if(field.enumT){if(initializer.isEmpty){initializer=',${A_SP}null';}if(A_builder.isEmpty){A_builder=',${A_SP}null';}B_valueOf=',${A_SP}(var v)${A_SP}=>${A_SP}${field.baseType}.valueOf(v)';}out.println('static final Extension ${A_name}${A_SP}=${A_SP}' 'new Extension(\'${extendee}\',${A_SP}\'${A_name}\',${A_SP}' '${_descriptor.number},${A_SP}GeneratedMessage.${A_type}' '${initializer}${A_builder}${B_valueOf}' ');');}String get name=>classname;}class ProtobufField{static final RegExp HEX_LITERAL_REGEX=new RegExp(r'^0x[0-9a-f]+$',multiLine:false,caseSensitive:false);static final RegExp INTEGER_LITERAL_REGEX=new RegExp(r'^[+-]?[0-9]+$');static final RegExp DECIMAL_LITERAL_REGEX_A=new RegExp(r'^[+-]?([0-9]*)\.[0-9]+(e[+-]?[0-9]+)?$',multiLine:false,caseSensitive:false);static final RegExp DECIMAL_LITERAL_REGEX_B=new RegExp(r'^[+-]?[0-9]+e[+-]?[0-9]+$',multiLine:false,caseSensitive:false);final FieldDescriptorProto _field;final ProtobufContainer parent;final GenerationContext context;final String fqname;final String baseType;final String typeString;final String codedStreamType;final bool repeats;final String initialization;final bool required;final bool packed;final bool packable;bool get single=>!repeats;bool get group=>type==FieldDescriptorProto_Type.TYPE_GROUP;bool get message=>type==FieldDescriptorProto_Type.TYPE_MESSAGE;bool get enumT=>type==FieldDescriptorProto_Type.TYPE_ENUM;bool get hasInitialization=>initialization!=null;bool get optional=>!required;String get name=>_field.name;int get number=>_field.number;FieldDescriptorProto_Label get label=>_field.label;FieldDescriptorProto_Type get type=>_field.type;FieldOptions get options=>_field.options;String get typeName=>_field.typeName;String get shortTypeName{String prefix;if(required){prefix='Q';}else if(packed){prefix='K';}else if(repeats){prefix='P';}else if(optional){prefix='O';}else{throw '${this}';}switch (codedStreamType.toUpperCase()){case 'BOOL':return '${prefix}B';case 'BYTES':return '${prefix}Y';case 'STRING':return '${prefix}S';case 'FLOAT':return '${prefix}F';case 'DOUBLE':return '${prefix}D';case 'ENUM':return '${prefix}E';case 'GROUP':return '${prefix}G';case 'INT32':return '${prefix}3';case 'INT64':return '${prefix}6';case 'UINT32':return '${prefix}U3';case 'UINT64':return '${prefix}U6';case 'SINT32':return '${prefix}S3';case 'SINT64':return '${prefix}S6';case 'FIXED32':return '${prefix}F3';case 'FIXED64':return '${prefix}F6';case 'SFIXED32':return '${prefix}SF3';case 'SFIXED64':return '${prefix}SF6';case 'MESSAGE':return '${prefix}M';}throw 'Unknown type';}ProtobufField.B__(field,A_parent,this.context,this.baseType,this.typeString,this.codedStreamType,this.repeats,this.initialization,this.required,this.packed,this.packable):this._field=field,this.parent=A_parent,fqname='${A_parent.fqname}.${field.name}';factory ProtobufField(FieldDescriptorProto field,MessageGenerator A_parent,GenerationContext A_context){bool A_required=field.label==FieldDescriptorProto_Label.LABEL_REQUIRED;bool A_repeats=field.label==FieldDescriptorProto_Label.LABEL_REPEATED;bool A_packed=false;var A_write;if(A_repeats){A_packed=field.options==null?false:field.options.packed;A_write=(String A_typeString)=>'List<${A_typeString}>';}else{A_write=(String A_typeString)=>A_typeString;}String A_baseType;String A_typeString;bool A_packable=false;String A_codedStreamType;String A_initialization;switch (field.type){case FieldDescriptorProto_Type.TYPE_BOOL:A_baseType='bool';A_typeString=A_write('bool');A_packable=true;A_codedStreamType='Bool';if(!A_repeats){if(field.hasDefaultValue()&&'false'!=field.defaultValue){A_initialization='()${A_SP}=>${A_SP}${field.defaultValue}';}}break;case FieldDescriptorProto_Type.TYPE_FLOAT:case FieldDescriptorProto_Type.TYPE_DOUBLE:A_baseType='double';A_typeString=A_write('double');A_packable=true;A_codedStreamType=(field.type==FieldDescriptorProto_Type.TYPE_FLOAT)?'Float':'Double';if(!A_repeats){if(field.hasDefaultValue()&&('0.0'!=field.defaultValue||'0'!=field.defaultValue)){if(field.defaultValue=='inf'){A_initialization='()${A_SP}=>${A_SP}double.INFINITY';}else if(field.defaultValue=='-inf'){A_initialization='()${A_SP}=>${A_SP}double.NEGATIVE_INFINITY';}else if(field.defaultValue=='nan'){A_initialization='()${A_SP}=>${A_SP}double.NAN';}else if(HEX_LITERAL_REGEX.hasMatch(field.defaultValue)){A_initialization='()${A_SP}=>${A_SP}(${field.defaultValue})' '.toDouble()';}else if(INTEGER_LITERAL_REGEX.hasMatch(field.defaultValue)){A_initialization='()${A_SP}=>${A_SP}${field.defaultValue}.0';}else if(DECIMAL_LITERAL_REGEX_A.hasMatch(field.defaultValue)||DECIMAL_LITERAL_REGEX_B.hasMatch(field.defaultValue)){A_initialization='()${A_SP}=>${A_SP}${field.defaultValue}';}else{throw new InvalidDefaultValue.A_double(field.name,field.defaultValue);}}}break;case FieldDescriptorProto_Type.TYPE_INT32:case FieldDescriptorProto_Type.TYPE_UINT32:case FieldDescriptorProto_Type.TYPE_SINT32:case FieldDescriptorProto_Type.TYPE_FIXED32:case FieldDescriptorProto_Type.TYPE_SFIXED32:A_baseType='int';A_typeString=A_write('int');A_packable=true;switch (field.type){case FieldDescriptorProto_Type.TYPE_INT32:A_codedStreamType='Int32';break;case FieldDescriptorProto_Type.TYPE_UINT32:A_codedStreamType='Uint32';break;case FieldDescriptorProto_Type.TYPE_SINT32:A_codedStreamType='Sint32';break;case FieldDescriptorProto_Type.TYPE_FIXED32:A_codedStreamType='Fixed32';break;case FieldDescriptorProto_Type.TYPE_SFIXED32:A_codedStreamType='Sfixed32';break;}if(!A_repeats){if(field.hasDefaultValue()&&'0'!=field.defaultValue){A_initialization='()${A_SP}=>${A_SP}${field.defaultValue}';}}break;case FieldDescriptorProto_Type.TYPE_INT64:case FieldDescriptorProto_Type.TYPE_UINT64:case FieldDescriptorProto_Type.TYPE_SINT64:case FieldDescriptorProto_Type.TYPE_FIXED64:case FieldDescriptorProto_Type.TYPE_SFIXED64:A_baseType='Int64';A_typeString=A_write('Int64');A_packable=true;switch (field.type){case FieldDescriptorProto_Type.TYPE_INT64:A_codedStreamType='Int64';break;case FieldDescriptorProto_Type.TYPE_UINT64:A_codedStreamType='Uint64';break;case FieldDescriptorProto_Type.TYPE_SINT64:A_codedStreamType='Sint64';break;case FieldDescriptorProto_Type.TYPE_FIXED64:A_codedStreamType='Fixed64';break;case FieldDescriptorProto_Type.TYPE_SFIXED64:A_codedStreamType='Sfixed64';break;}if(!A_repeats){final defaultValue=field.hasDefaultValue()?field.defaultValue:'0';A_initialization='()${A_SP}=>${A_SP}makeLongInt(${defaultValue})';}break;case FieldDescriptorProto_Type.TYPE_STRING:A_baseType='String';A_typeString=A_write('String');A_codedStreamType='String';if(!A_repeats){if(field.hasDefaultValue()&&!field.defaultValue.isEmpty){String defaultValue=field.defaultValue.replaceAll(r'$',r'\$');A_initialization='()${A_SP}=>${A_SP}\'${defaultValue}\'';}}break;case FieldDescriptorProto_Type.TYPE_BYTES:A_baseType='List<int>';A_typeString=A_write('List<int>');A_codedStreamType='Bytes';if(!A_repeats){if(field.hasDefaultValue()&&!field.defaultValue.isEmpty){String byteList=field.defaultValue.codeUnits.map((b)=>'0x${b.toRadixString(16)}').join(',');A_initialization='()${A_SP}=>${A_SP}<int>[${byteList}]';}}break;case FieldDescriptorProto_Type.TYPE_GROUP:ProtobufContainer groupType=A_context[field.typeName];if(groupType!=null){A_baseType=groupType.classname;A_typeString=A_write(groupType.classname);A_codedStreamType='Group';}else{throw 'FAILURE: Unknown group type reference ${field.typeName}';}A_initialization='()${A_SP}=>${A_SP}new ${A_baseType}()';break;case FieldDescriptorProto_Type.TYPE_MESSAGE:ProtobufContainer A_messageType=A_context[field.typeName];if(A_messageType!=null){A_baseType=A_messageType.classname;A_typeString=A_write(A_messageType.classname);A_codedStreamType='Message';}else{throw 'FAILURE: Unknown message type reference ${field.typeName}';}A_initialization='()${A_SP}=>${A_SP}new ${A_baseType}()';break;case FieldDescriptorProto_Type.TYPE_ENUM:EnumGenerator enumType=A_context[field.typeName];if(enumType!=null){A_baseType=enumType.classname;A_typeString=A_write(enumType.classname);A_codedStreamType='Enum';A_packable=true;if(!A_repeats){if(field.hasDefaultValue()&&!field.defaultValue.isEmpty){A_initialization='()${A_SP}=>${A_SP}${enumType.classname}.${field.defaultValue}';}else if(!enumType._canonicalValues.isEmpty){A_initialization='()${A_SP}=>${A_SP}${enumType.classname}.' '${enumType._canonicalValues[0].name}';}}}else{throw 'FAILURE: Unknown enum type reference ${field.typeName}';}break;default:throw 'Unknown type ${field.type.name}';}if(A_repeats){A_initialization='()${A_SP}=>${A_SP}new PbList()';}return new ProtobufField.B__(field,A_parent,A_context,A_baseType,A_typeString,A_codedStreamType,A_repeats,A_initialization,A_required,A_packed,A_packable);}String get externalFieldName{String A_name=titlecaseFieldName;return '${A_name[0].toLowerCase()}${A_name.substring(1)}';}String get titlecaseFieldName{String underscoresToCamelCase(String s){cap(s)=>s.isEmpty?s:'${s[0].toUpperCase()}${s.substring(1)}';return s.split('_').map(cap).join('');}if(codedStreamType=='Group'){String A_name=_field.typeName;int index=A_name.lastIndexOf('.');if(index!=-1){A_name=A_name.substring(index+1);}return underscoresToCamelCase(A_name);}var A_name=context.options.fieldNameOption(fqname);return (A_name!=null)?A_name:underscoresToCamelCase(_field.name);}}class InvalidDefaultValue implements Exception{final String message;InvalidDefaultValue.A_double(String fieldName,String invalidValue):message='InvalidDefaultValue: protoc found invalid default value (${invalidValue})' ' for the double field ${fieldName}';}class EnumAlias{final EnumValueDescriptorProto value;final EnumValueDescriptorProto canonicalValue;EnumAlias(this.value,this.canonicalValue);}class FileGenerator implements ProtobufContainer{final FileDescriptorProto _fileDescriptor;final ProtobufContainer _parent;final GenerationContext _context;final List<EnumGenerator> enumGenerators=<EnumGenerator>[] ;final List<MessageGenerator> messageGenerators=<MessageGenerator>[] ;final List<ExtensionGenerator> extensionGenerators=<ExtensionGenerator>[] ;FileGenerator(this._fileDescriptor,this._parent,this._context){_context.register(this);for(EnumDescriptorProto enumType in _fileDescriptor.enumType){enumGenerators.add(new EnumGenerator(enumType,this,_context));}for(DescriptorProto A_messageType in _fileDescriptor.messageType){messageGenerators.add(new MessageGenerator(A_messageType,this,_context));}for(FieldDescriptorProto extension in _fileDescriptor.extension){extensionGenerators.add(new ExtensionGenerator(extension,this,_context));}}String get classname=>'';String get fqname=>'.${_fileDescriptor.package}';String _fileNameWithoutExtension(Uri filePath){String fileName=filePath.pathSegments.last;int index=fileName.lastIndexOf(".");return index==-1?fileName:fileName.substring(0,index);}Uri _generatedFilePath(Uri protoFilePath){var dartFileName=_fileNameWithoutExtension(protoFilePath)+".pb.dart";return protoFilePath.resolve(dartFileName);}String _generateClassName(Uri protoFilePath){String s=_fileNameWithoutExtension(protoFilePath).replaceAll('-','_');return '${s[0].toUpperCase()}${s.substring(1)}';}String _generateLibraryName(Uri protoFilePath){if(_fileDescriptor.package!='')return _fileDescriptor.package;return _fileNameWithoutExtension(protoFilePath).replaceAll('-','_');}Uri _relative(Uri A_target,Uri A_base){List<String> baseSegments=A_base.pathSegments.sublist(0,A_base.pathSegments.length-1);List<String> targetSegments=A_target.pathSegments;if(baseSegments.length==1&&baseSegments[0]=='.'){baseSegments=[] ;}if(targetSegments.length==1&&targetSegments[0]=='.'){targetSegments=[] ;}int common=0;int A_length=D_p.min(targetSegments.length,baseSegments.length);while (common<A_length&&targetSegments[common]==baseSegments[common]){common++ ;}final segments=<String>[] ;if(common<baseSegments.length&&baseSegments[common]=='..'){throw new ArgumentError("Cannot create a relative path from ${A_base} to ${A_target}");}for(int i=common;i<baseSegments.length;i++ ){segments.add('..');}for(int i=common;i<targetSegments.length;i++ ){segments.add('${targetSegments[i]}');}if(segments.isEmpty){segments.add('.');}return new Uri(pathSegments:segments);}CodeGeneratorResponse_File generateResponse(){MemoryWriter writer=new MemoryWriter();IndentingWriter out=new IndentingWriter('  ',writer);generate(out);Uri filePath=new Uri(scheme:'file',path:_fileDescriptor.name);return new CodeGeneratorResponse_File()..name=_generatedFilePath(filePath).path..content=writer.toString();}void generate(IndentingWriter out){Uri filePath=new Uri.file(_fileDescriptor.name);if(filePath.isAbsolute){throw ("FAILURE: File with an absolute path is not supported");}String A_libraryName=_generateLibraryName(filePath);out.println('///\n' '//  Generated code. Do not modify.\n' '///\n' 'library ${A_libraryName};\n' '\n' "import 'dart:typed_data';\n" '\n' "import 'package:fixnum/fixnum.dart';\n" "import 'package:protobuf/protobuf.dart';");for(String import in _fileDescriptor.dependency){Uri importPath=new Uri.file(import);if(importPath.isAbsolute){throw ("FAILURE: Import with absolute path is not supported");}Uri relativeProtoPath=_relative(importPath,filePath);out.println("import '${_generatedFilePath(relativeProtoPath)}';");}out.println('');for(MessageGenerator m in messageGenerators){m.initializeFields();}for(EnumGenerator e in enumGenerators){e.generate(out);}for(MessageGenerator m in messageGenerators){m.generate(out);}if(!extensionGenerators.isEmpty){String className=_generateClassName(filePath);out.addBlock('class ${className} {','}\n',(){for(ExtensionGenerator A_x in extensionGenerators){A_x.generate(out);}out.println('static void registerAllExtensions(ExtensionRegistry ' 'registry) {');for(ExtensionGenerator A_x in extensionGenerators){out.println('  registry.add(${A_x.name});');}out.println('}');});}}}abstract class Writer{void print(String out);void println([String out]);}class IndentingWriter implements Writer{final String _indentSequence;final Writer _writer;final StringBuffer _currentText=new StringBuffer();String _currentIndent='';IndentingWriter(this._indentSequence,this._writer);void addBlock(String A_start,String A_end,void body()){println(A_start);var oldIndent=_currentIndent;_currentIndent='${_currentIndent}${_indentSequence}';body();_currentIndent=oldIndent;println(A_end);}void print(String stringToPrint){_currentText.write(stringToPrint);}void println([String out='']){print(out);for(String line in _currentText.toString().split('\n')){if(!line.isEmpty)_writer.print(_currentIndent);_writer.println(line);}_currentText.clear();}}const String A_SP=' ';class MessageGenerator implements ProtobufContainer{static final List<String> reservedNames=['hashCode','noSuchMethod','runtimeType','toString','fromBuffer','fromJson','hasRequiredFields','isInitialized','clear','getTagNumber','check','writeToBuffer','writeToCodedBufferWriter','mergeFromCodedBufferReader','mergeFromBuffer','writeToJson','mergeFromJson','addExtension','getExtension','setExtension','hasExtension','clearExtension','getField','setField','hasField','clearField','extensionsAreInitialized','mergeFromMessage','mergeUnknownFields','==','info_','GeneratedMessage','Object'];final String classname;final String fqname;final GenerationContext _context;final DescriptorProto _descriptor;final List<EnumGenerator> _enumGenerators=<EnumGenerator>[] ;final List<ProtobufField> _fieldList=<ProtobufField>[] ;final List<MessageGenerator> _messageGenerators=<MessageGenerator>[] ;final List<ExtensionGenerator> _extensionGenerators=<ExtensionGenerator>[] ;final Set<String> _methodNames=new Set<String>();MessageGenerator(DescriptorProto descriptor,ProtobufContainer A_parent,this._context):_descriptor=descriptor,classname=(A_parent==null||A_parent.classname=='')?descriptor.name:'${A_parent.classname}_${descriptor.name}',fqname=(A_parent==null||A_parent.fqname==null)?descriptor.name:(A_parent.fqname=='.'?'.${descriptor.name}':'${A_parent.fqname}.${descriptor.name}'){_context.register(this);for(EnumDescriptorProto e in _descriptor.enumType){_enumGenerators.add(new EnumGenerator(e,this,_context));}for(DescriptorProto n in _descriptor.nestedType){_messageGenerators.add(new MessageGenerator(n,this,_context));}for(FieldDescriptorProto A_x in _descriptor.extension){_extensionGenerators.add(new ExtensionGenerator(A_x,this,_context));}}void initializeFields(){_fieldList.clear();for(FieldDescriptorProto field in _descriptor.field){_fieldList.add(new ProtobufField(field,this,_context));}for(MessageGenerator m in _messageGenerators){m.initializeFields();}}void generate(IndentingWriter out){_methodNames.clear();_methodNames.addAll(reservedNames);for(EnumGenerator e in _enumGenerators){e.generate(out);}for(MessageGenerator m in _messageGenerators){m.generate(out);}out.addBlock('class ${classname} extends GeneratedMessage${A_SP}{','}',(){out.addBlock('static final BuilderInfo _i = new BuilderInfo(\'${classname}\')',';',(){for(ProtobufField field in _fieldList){String A_type=field.shortTypeName;String makeDefault=null;if(field.hasInitialization){makeDefault='${field.initialization}';}String A_subBuilder=null;if(field.message||field.group){A_subBuilder='()${A_SP}=>${A_SP}new ${field.baseType}()';}String B_valueOf=null;if(field.enumT){B_valueOf='(var v)${A_SP}=>${A_SP}${field.baseType}.valueOf(v)';}if('PM'==A_type){out.println('..m(${field.number},${A_SP}' '\'${field.externalFieldName}\',${A_SP}${A_subBuilder},' '${A_SP}()${A_SP}=>${A_SP}new PbList<${field.baseType}>())');}else if(A_type[0]=='P'&&A_type!='PG'&&A_type!='PE'){out.println('..p(${field.number},${A_SP}' '\'${field.externalFieldName}\',${A_SP}GeneratedMessage.${A_type})');}else if(A_type=='OE'||A_type=='QE'){out.println('..e(${field.number},${A_SP}' '\'${field.externalFieldName}\',${A_SP}GeneratedMessage.${A_type},' '${A_SP}${makeDefault},${A_SP}${B_valueOf})');}else{if(makeDefault==null&&A_subBuilder==null&&B_valueOf==null){out.println('..a(${field.number},${A_SP}' '\'${field.externalFieldName}\',${A_SP}GeneratedMessage.${A_type})');}else if(A_subBuilder==null&&B_valueOf==null){out.println('..a(${field.number},${A_SP}' '\'${field.externalFieldName}\',${A_SP}GeneratedMessage.${A_type},' '${A_SP}${makeDefault})');}else if(B_valueOf==null){out.println('..a(${field.number},${A_SP}' '\'${field.externalFieldName}\',${A_SP}GeneratedMessage.${A_type},' '${A_SP}${makeDefault},${A_SP}${A_subBuilder})');}else{out.println('..a(${field.number},${A_SP}' '\'${field.externalFieldName}\',${A_SP}GeneratedMessage.${A_type},' '${A_SP}${makeDefault},${A_SP}${A_subBuilder},${A_SP}${B_valueOf})');}}}if(_descriptor.extensionRange.length>0){out.println('..hasExtensions${A_SP}=${A_SP}true');}if(!_hasRequiredFields(this,new Set())){out.println('..hasRequiredFields${A_SP}=${A_SP}false');}});for(ExtensionGenerator A_x in _extensionGenerators){A_x.generate(out);}out.println();out.println('${classname}()${A_SP}:${A_SP}super();');out.println('${classname}.fromBuffer(List<int> i,' '${A_SP}[ExtensionRegistry r = ExtensionRegistry.EMPTY])' '${A_SP}:${A_SP}super.fromBuffer(i,${A_SP}r);');out.println('${classname}.fromJson(String i,' '${A_SP}[ExtensionRegistry r = ExtensionRegistry.EMPTY])' '${A_SP}:${A_SP}super.fromJson(i,${A_SP}r);');out.println('${classname} clone()${A_SP}=>' '${A_SP}new ${classname}()..mergeFromMessage(this);');out.println('BuilderInfo get info_${A_SP}=>${A_SP}_i;');generateFieldsAccessorsMutators(out);});out.println();}bool _hasRequiredFields(MessageGenerator A_type,Set alreadySeen){if(alreadySeen.contains(A_type.fqname)){return false;}alreadySeen.add(A_type.fqname);if(A_type._descriptor.extensionRange.length>0){return true;}for(ProtobufField field in A_type._fieldList){if(field.required){return true;}if(field.message){ProtobufContainer A_messageType=_context[field.typeName];if(A_messageType!=null&&A_messageType is MessageGenerator){if(_hasRequiredFields(A_messageType,alreadySeen)){return true;}}}}return false;}void generateFieldsAccessorsMutators(IndentingWriter out){for(ProtobufField field in _fieldList){out.println();String identifier=field.externalFieldName;String hasIdentifier="has"+field.titlecaseFieldName;String clearIdentifier="clear"+field.titlecaseFieldName;if(field.single){while (_methodNames.contains(identifier)||_methodNames.contains(hasIdentifier)||_methodNames.contains(clearIdentifier)){identifier+= '_'+field.number.toString();hasIdentifier+= '_'+field.number.toString();clearIdentifier+= '_'+field.number.toString();}_methodNames.add(identifier);_methodNames.add(hasIdentifier);_methodNames.add(clearIdentifier);}else{while (_methodNames.contains(identifier)){identifier+= '_'+field.number.toString();}_methodNames.add(identifier);}out.println('${field.typeString} get ${identifier}' '${A_SP}=>${A_SP}getField(${field.number});');if(field.single){out.println('void set ${identifier}' '(${field.typeString} v)${A_SP}' '{${A_SP}setField(${field.number},${A_SP}v);${A_SP}}');out.println('bool ${hasIdentifier}()${A_SP}=>' '${A_SP}hasField(${field.number});');out.println('void ${clearIdentifier}()${A_SP}=>' '${A_SP}clearField(${field.number});');}}}}class MemoryWriter implements Writer{final StringBuffer B__buffer=new StringBuffer();void print(String out){B__buffer.write(out);}void println([String out]){B__buffer.write(out);B__buffer.write('\n');}String toString()=>B__buffer.toString();}class CodeGenerator implements ProtobufContainer{final p.Stream<List<int>> _streamIn;final C_p.IOSink _streamOut;final C_p.IOSink _streamErr;CodeGenerator(this._streamIn,this._streamOut,this._streamErr);void generate(){_streamIn.fold(<int>[] ,(bytes,A_data)=>bytes..addAll(A_data)).then((List<int> bytes){var request=new CodeGeneratorRequest.A_fromBuffer(bytes);var A_response=new CodeGeneratorResponse();var options=new GenerationOptions(request,A_response);if(options==null){_streamOut.add(A_response.writeToBuffer());return;}var ctx=new GenerationContext(options);List<FileGenerator> generators=<FileGenerator>[] ;for(FileDescriptorProto A_file in request.protoFile){var generator=new FileGenerator(A_file,this,ctx);if(request.fileToGenerate.contains(A_file.name)){generators.add(generator);}}A_response.file.addAll(generators.map((filegen)=>filegen.generateResponse()));_streamOut.add(A_response.writeToBuffer());});}String get fqname=>'';String get classname=>null;}class EnumGenerator implements ProtobufContainer{final String classname;final String fqname;final List<EnumValueDescriptorProto> _canonicalValues=<EnumValueDescriptorProto>[] ;final List<EnumAlias> _aliases=<EnumAlias>[] ;EnumGenerator(EnumDescriptorProto descriptor,ProtobufContainer A_parent,GenerationContext context):classname=(A_parent==null||A_parent is FileGenerator)?descriptor.name:'${A_parent.classname}_${descriptor.name}',fqname=(A_parent==null||A_parent.fqname==null)?descriptor.name:(A_parent.fqname=='.'?'.${descriptor.name}':'${A_parent.fqname}.${descriptor.name}'){for(EnumValueDescriptorProto A_value in descriptor.value){EnumValueDescriptorProto canonicalValue=descriptor.value.firstWhere((v)=>v.number==A_value.number);if(A_value==canonicalValue){_canonicalValues.add(A_value);}else{_aliases.add(new EnumAlias(A_value,canonicalValue));}}context.register(this);}void generate(IndentingWriter out){out.addBlock('class ${classname} extends ProtobufEnum {','}\n',(){for(EnumValueDescriptorProto val in _canonicalValues){out.println('static const ${classname} ${val.name}${A_SP}=${A_SP}' "const ${classname}._(${val.number},${A_SP}'${val.name}');");}if(!_aliases.isEmpty){out.println();for(EnumAlias alias in _aliases){out.println('static const ${classname} ${alias.value.name} =' ' ${alias.canonicalValue.name};');}}out.println();out.println('static const List<${classname}> values${A_SP}=' '${A_SP}const${A_SP}<${classname}>${A_SP}[');for(EnumValueDescriptorProto val in _canonicalValues){out.println('${A_SP}${A_SP}${val.name},');}out.println('];');out.println();out.println('static final Map<int, ${classname}> _byValue${A_SP}=' '${A_SP}ProtobufEnum.initByValue(values);');out.println('static ${classname} valueOf(int value)${A_SP}=>' '${A_SP}_byValue[value];');out.println();out.println('const ${classname}._(int v,${A_SP}String n)${A_SP}' ':${A_SP}super(v,${A_SP}n);');});}}class GenerationOptions{final Map<String,String> fieldNameOptions;GenerationOptions.B__(this.fieldNameOptions);factory GenerationOptions(request,A_response){var A_fieldNameOptions=<String,String>{};var parameter=request.parameter!=null?request.parameter:'';List<String> options=parameter.trim().split(',');List<String> errors=[] ;for(var option in options){option=option.trim();if(option.isEmpty)continue;List<String> nameValue=option.split('=');if(nameValue.length!=1&&nameValue.length!=2){errors.add('Illegal option: ${option}');continue;}String A_name=nameValue[0].trim();String A_value;if(nameValue.length>1)A_value=nameValue[1].trim();if(A_name=='field_name'){if(A_value==null){errors.add('Illegal option: ${option}');continue;}List<String> fromTo=A_value.split('|');if(fromTo.length!=2){errors.add('Illegal option: ${option}');continue;}var fromName=fromTo[0].trim();var toName=fromTo[1].trim();if(fromName.length==0||toName.length==0){errors.add('Illegal option: ${option}');continue;}A_fieldNameOptions['.${fromName}']=toName;}else{errors.add('Illegal option: ${option}');}}if(errors.length>0){A_response.error=errors.join('\n');return null;}else{return new GenerationOptions.B__(A_fieldNameOptions);}}String fieldNameOption(String fqname)=>fieldNameOptions[fqname];}class GenerationContext{final GenerationOptions options;final Map<String,ProtobufContainer> _registry=<String,ProtobufContainer>{};GenerationContext(this.options);void register(ProtobufContainer container){_registry[container.fqname]=container;}ProtobufContainer operator[](String fqname)=>_registry[fqname];}class FileDescriptorProto extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('FileDescriptorProto')..a(1,'name',GeneratedMessage.OS)..a(2,'package',GeneratedMessage.OS)..F_p(3,'dependency',GeneratedMessage.PS)..F_p(10,'publicDependency',GeneratedMessage.P3)..F_p(11,'weakDependency',GeneratedMessage.P3)..m(4,'messageType',()=>new DescriptorProto(),()=>new PbList<DescriptorProto>())..m(5,'enumType',()=>new EnumDescriptorProto(),()=>new PbList<EnumDescriptorProto>())..m(6,'service',()=>new ServiceDescriptorProto(),()=>new PbList<ServiceDescriptorProto>())..m(7,'extension',()=>new FieldDescriptorProto(),()=>new PbList<FieldDescriptorProto>())..a(8,'options',GeneratedMessage.OM,()=>new FileOptions(),()=>new FileOptions())..a(9,'sourceCodeInfo',GeneratedMessage.OM,()=>new SourceCodeInfo(),()=>new SourceCodeInfo());FileDescriptorProto():super();FileDescriptorProto clone()=>new FileDescriptorProto()..mergeFromMessage(this);BuilderInfo get info_=>_i;String get name=>getField(1);void set name(String v){setField(1,v);}String get package=>getField(2);List<String> get dependency=>getField(3);List<DescriptorProto> get messageType=>getField(4);List<EnumDescriptorProto> get enumType=>getField(5);List<FieldDescriptorProto> get extension=>getField(7);FileOptions get options=>getField(8);}class DescriptorProto_ExtensionRange extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('DescriptorProto_ExtensionRange')..a(1,'start',GeneratedMessage.O3)..a(2,'end',GeneratedMessage.O3)..hasRequiredFields=false;DescriptorProto_ExtensionRange():super();DescriptorProto_ExtensionRange clone()=>new DescriptorProto_ExtensionRange()..mergeFromMessage(this);BuilderInfo get info_=>_i;}class DescriptorProto extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('DescriptorProto')..a(1,'name',GeneratedMessage.OS)..m(2,'field',()=>new FieldDescriptorProto(),()=>new PbList<FieldDescriptorProto>())..m(6,'extension',()=>new FieldDescriptorProto(),()=>new PbList<FieldDescriptorProto>())..m(3,'nestedType',()=>new DescriptorProto(),()=>new PbList<DescriptorProto>())..m(4,'enumType',()=>new EnumDescriptorProto(),()=>new PbList<EnumDescriptorProto>())..m(5,'extensionRange',()=>new DescriptorProto_ExtensionRange(),()=>new PbList<DescriptorProto_ExtensionRange>())..a(7,'options',GeneratedMessage.OM,()=>new MessageOptions(),()=>new MessageOptions());DescriptorProto():super();DescriptorProto clone()=>new DescriptorProto()..mergeFromMessage(this);BuilderInfo get info_=>_i;String get name=>getField(1);void set name(String v){setField(1,v);}List<FieldDescriptorProto> get field=>getField(2);List<FieldDescriptorProto> get extension=>getField(6);List<DescriptorProto> get nestedType=>getField(3);List<EnumDescriptorProto> get enumType=>getField(4);List<DescriptorProto_ExtensionRange> get extensionRange=>getField(5);MessageOptions get options=>getField(7);}class FieldDescriptorProto_Type extends ProtobufEnum{static const FieldDescriptorProto_Type TYPE_DOUBLE=const FieldDescriptorProto_Type.C__(1,'TYPE_DOUBLE');static const FieldDescriptorProto_Type TYPE_FLOAT=const FieldDescriptorProto_Type.C__(2,'TYPE_FLOAT');static const FieldDescriptorProto_Type TYPE_INT64=const FieldDescriptorProto_Type.C__(3,'TYPE_INT64');static const FieldDescriptorProto_Type TYPE_UINT64=const FieldDescriptorProto_Type.C__(4,'TYPE_UINT64');static const FieldDescriptorProto_Type TYPE_INT32=const FieldDescriptorProto_Type.C__(5,'TYPE_INT32');static const FieldDescriptorProto_Type TYPE_FIXED64=const FieldDescriptorProto_Type.C__(6,'TYPE_FIXED64');static const FieldDescriptorProto_Type TYPE_FIXED32=const FieldDescriptorProto_Type.C__(7,'TYPE_FIXED32');static const FieldDescriptorProto_Type TYPE_BOOL=const FieldDescriptorProto_Type.C__(8,'TYPE_BOOL');static const FieldDescriptorProto_Type TYPE_STRING=const FieldDescriptorProto_Type.C__(9,'TYPE_STRING');static const FieldDescriptorProto_Type TYPE_GROUP=const FieldDescriptorProto_Type.C__(10,'TYPE_GROUP');static const FieldDescriptorProto_Type TYPE_MESSAGE=const FieldDescriptorProto_Type.C__(11,'TYPE_MESSAGE');static const FieldDescriptorProto_Type TYPE_BYTES=const FieldDescriptorProto_Type.C__(12,'TYPE_BYTES');static const FieldDescriptorProto_Type TYPE_UINT32=const FieldDescriptorProto_Type.C__(13,'TYPE_UINT32');static const FieldDescriptorProto_Type TYPE_ENUM=const FieldDescriptorProto_Type.C__(14,'TYPE_ENUM');static const FieldDescriptorProto_Type TYPE_SFIXED32=const FieldDescriptorProto_Type.C__(15,'TYPE_SFIXED32');static const FieldDescriptorProto_Type TYPE_SFIXED64=const FieldDescriptorProto_Type.C__(16,'TYPE_SFIXED64');static const FieldDescriptorProto_Type TYPE_SINT32=const FieldDescriptorProto_Type.C__(17,'TYPE_SINT32');static const FieldDescriptorProto_Type TYPE_SINT64=const FieldDescriptorProto_Type.C__(18,'TYPE_SINT64');static const List<FieldDescriptorProto_Type> A_values=const<FieldDescriptorProto_Type>[TYPE_DOUBLE,TYPE_FLOAT,TYPE_INT64,TYPE_UINT64,TYPE_INT32,TYPE_FIXED64,TYPE_FIXED32,TYPE_BOOL,TYPE_STRING,TYPE_GROUP,TYPE_MESSAGE,TYPE_BYTES,TYPE_UINT32,TYPE_ENUM,TYPE_SFIXED32,TYPE_SFIXED64,TYPE_SINT32,TYPE_SINT64];static final Map<int,FieldDescriptorProto_Type> _byValue=ProtobufEnum.initByValue(A_values);static FieldDescriptorProto_Type A_valueOf(int A_value)=>_byValue[A_value];const FieldDescriptorProto_Type.C__(int v,String n):super(v,n);}class FieldDescriptorProto_Label extends ProtobufEnum{static const FieldDescriptorProto_Label LABEL_OPTIONAL=const FieldDescriptorProto_Label.C__(1,'LABEL_OPTIONAL');static const FieldDescriptorProto_Label LABEL_REQUIRED=const FieldDescriptorProto_Label.C__(2,'LABEL_REQUIRED');static const FieldDescriptorProto_Label LABEL_REPEATED=const FieldDescriptorProto_Label.C__(3,'LABEL_REPEATED');static const List<FieldDescriptorProto_Label> A_values=const<FieldDescriptorProto_Label>[LABEL_OPTIONAL,LABEL_REQUIRED,LABEL_REPEATED];static final Map<int,FieldDescriptorProto_Label> _byValue=ProtobufEnum.initByValue(A_values);static FieldDescriptorProto_Label A_valueOf(int A_value)=>_byValue[A_value];const FieldDescriptorProto_Label.C__(int v,String n):super(v,n);}class FieldDescriptorProto extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('FieldDescriptorProto')..a(1,'name',GeneratedMessage.OS)..a(3,'number',GeneratedMessage.O3)..e(4,'label',GeneratedMessage.OE,()=>FieldDescriptorProto_Label.LABEL_OPTIONAL,(var v)=>FieldDescriptorProto_Label.A_valueOf(v))..e(5,'type',GeneratedMessage.OE,()=>FieldDescriptorProto_Type.TYPE_DOUBLE,(var v)=>FieldDescriptorProto_Type.A_valueOf(v))..a(6,'typeName',GeneratedMessage.OS)..a(2,'extendee',GeneratedMessage.OS)..a(7,'defaultValue',GeneratedMessage.OS)..a(8,'options',GeneratedMessage.OM,()=>new FieldOptions(),()=>new FieldOptions());FieldDescriptorProto():super();FieldDescriptorProto clone()=>new FieldDescriptorProto()..mergeFromMessage(this);BuilderInfo get info_=>_i;String get name=>getField(1);void set name(String v){setField(1,v);}int get number=>getField(3);FieldDescriptorProto_Label get label=>getField(4);FieldDescriptorProto_Type get type=>getField(5);String get typeName=>getField(6);String get extendee=>getField(2);String get defaultValue=>getField(7);bool hasDefaultValue()=>hasField(7);FieldOptions get options=>getField(8);}class EnumDescriptorProto extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('EnumDescriptorProto')..a(1,'name',GeneratedMessage.OS)..m(2,'value',()=>new EnumValueDescriptorProto(),()=>new PbList<EnumValueDescriptorProto>())..a(3,'options',GeneratedMessage.OM,()=>new EnumOptions(),()=>new EnumOptions());EnumDescriptorProto():super();EnumDescriptorProto clone()=>new EnumDescriptorProto()..mergeFromMessage(this);BuilderInfo get info_=>_i;String get name=>getField(1);void set name(String v){setField(1,v);}List<EnumValueDescriptorProto> get value=>getField(2);EnumOptions get options=>getField(3);}class EnumValueDescriptorProto extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('EnumValueDescriptorProto')..a(1,'name',GeneratedMessage.OS)..a(2,'number',GeneratedMessage.O3)..a(3,'options',GeneratedMessage.OM,()=>new EnumValueOptions(),()=>new EnumValueOptions());EnumValueDescriptorProto():super();EnumValueDescriptorProto clone()=>new EnumValueDescriptorProto()..mergeFromMessage(this);BuilderInfo get info_=>_i;String get name=>getField(1);void set name(String v){setField(1,v);}int get number=>getField(2);EnumValueOptions get options=>getField(3);}class ServiceDescriptorProto extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('ServiceDescriptorProto')..a(1,'name',GeneratedMessage.OS)..m(2,'method',()=>new MethodDescriptorProto(),()=>new PbList<MethodDescriptorProto>())..m(4,'stream',()=>new StreamDescriptorProto(),()=>new PbList<StreamDescriptorProto>())..a(3,'options',GeneratedMessage.OM,()=>new ServiceOptions(),()=>new ServiceOptions());ServiceDescriptorProto():super();ServiceDescriptorProto clone()=>new ServiceDescriptorProto()..mergeFromMessage(this);BuilderInfo get info_=>_i;String get name=>getField(1);void set name(String v){setField(1,v);}ServiceOptions get options=>getField(3);}class MethodDescriptorProto extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('MethodDescriptorProto')..a(1,'name',GeneratedMessage.OS)..a(2,'inputType',GeneratedMessage.OS)..a(3,'outputType',GeneratedMessage.OS)..a(4,'options',GeneratedMessage.OM,()=>new MethodOptions(),()=>new MethodOptions());MethodDescriptorProto():super();MethodDescriptorProto clone()=>new MethodDescriptorProto()..mergeFromMessage(this);BuilderInfo get info_=>_i;String get name=>getField(1);void set name(String v){setField(1,v);}MethodOptions get options=>getField(4);}class StreamDescriptorProto extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('StreamDescriptorProto')..a(1,'name',GeneratedMessage.OS)..a(2,'clientMessageType',GeneratedMessage.OS)..a(3,'serverMessageType',GeneratedMessage.OS)..a(4,'options',GeneratedMessage.OM,()=>new StreamOptions(),()=>new StreamOptions());StreamDescriptorProto():super();StreamDescriptorProto clone()=>new StreamDescriptorProto()..mergeFromMessage(this);BuilderInfo get info_=>_i;String get name=>getField(1);void set name(String v){setField(1,v);}StreamOptions get options=>getField(4);}class FileOptions_OptimizeMode extends ProtobufEnum{static const FileOptions_OptimizeMode SPEED=const FileOptions_OptimizeMode.C__(1,'SPEED');static const FileOptions_OptimizeMode CODE_SIZE=const FileOptions_OptimizeMode.C__(2,'CODE_SIZE');static const FileOptions_OptimizeMode LITE_RUNTIME=const FileOptions_OptimizeMode.C__(3,'LITE_RUNTIME');static const List<FileOptions_OptimizeMode> A_values=const<FileOptions_OptimizeMode>[SPEED,CODE_SIZE,LITE_RUNTIME];static final Map<int,FileOptions_OptimizeMode> _byValue=ProtobufEnum.initByValue(A_values);static FileOptions_OptimizeMode A_valueOf(int A_value)=>_byValue[A_value];const FileOptions_OptimizeMode.C__(int v,String n):super(v,n);}class FileOptions extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('FileOptions')..a(1,'javaPackage',GeneratedMessage.OS)..a(8,'javaOuterClassname',GeneratedMessage.OS)..a(10,'javaMultipleFiles',GeneratedMessage.OB)..a(20,'javaGenerateEqualsAndHash',GeneratedMessage.OB)..e(9,'optimizeFor',GeneratedMessage.OE,()=>FileOptions_OptimizeMode.SPEED,(var v)=>FileOptions_OptimizeMode.A_valueOf(v))..a(16,'ccGenericServices',GeneratedMessage.OB)..a(17,'javaGenericServices',GeneratedMessage.OB)..a(18,'pyGenericServices',GeneratedMessage.OB)..m(999,'uninterpretedOption',()=>new UninterpretedOption(),()=>new PbList<UninterpretedOption>())..hasExtensions=true;FileOptions():super();FileOptions clone()=>new FileOptions()..mergeFromMessage(this);BuilderInfo get info_=>_i;}class MessageOptions extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('MessageOptions')..a(1,'messageSetWireFormat',GeneratedMessage.OB)..a(2,'noStandardDescriptorAccessor',GeneratedMessage.OB)..m(999,'uninterpretedOption',()=>new UninterpretedOption(),()=>new PbList<UninterpretedOption>())..hasExtensions=true;MessageOptions():super();MessageOptions clone()=>new MessageOptions()..mergeFromMessage(this);BuilderInfo get info_=>_i;}class FieldOptions_CType extends ProtobufEnum{static const FieldOptions_CType STRING=const FieldOptions_CType.C__(0,'STRING');static const List<FieldOptions_CType> A_values=const<FieldOptions_CType>[STRING];static final Map<int,FieldOptions_CType> _byValue=ProtobufEnum.initByValue(A_values);static FieldOptions_CType A_valueOf(int A_value)=>_byValue[A_value];const FieldOptions_CType.C__(int v,String n):super(v,n);}class FieldOptions extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('FieldOptions')..e(1,'ctype',GeneratedMessage.OE,()=>FieldOptions_CType.STRING,(var v)=>FieldOptions_CType.A_valueOf(v))..a(2,'packed',GeneratedMessage.OB)..a(5,'lazy',GeneratedMessage.OB)..a(3,'deprecated',GeneratedMessage.OB)..a(9,'experimentalMapKey',GeneratedMessage.OS)..m(999,'uninterpretedOption',()=>new UninterpretedOption(),()=>new PbList<UninterpretedOption>())..hasExtensions=true;FieldOptions():super();FieldOptions clone()=>new FieldOptions()..mergeFromMessage(this);BuilderInfo get info_=>_i;bool get packed=>getField(2);}class EnumOptions extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('EnumOptions')..a(2,'allowAlias',GeneratedMessage.OB,()=>true)..m(999,'uninterpretedOption',()=>new UninterpretedOption(),()=>new PbList<UninterpretedOption>())..hasExtensions=true;EnumOptions():super();EnumOptions clone()=>new EnumOptions()..mergeFromMessage(this);BuilderInfo get info_=>_i;}class EnumValueOptions extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('EnumValueOptions')..m(999,'uninterpretedOption',()=>new UninterpretedOption(),()=>new PbList<UninterpretedOption>())..hasExtensions=true;EnumValueOptions():super();EnumValueOptions clone()=>new EnumValueOptions()..mergeFromMessage(this);BuilderInfo get info_=>_i;}class ServiceOptions extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('ServiceOptions')..m(999,'uninterpretedOption',()=>new UninterpretedOption(),()=>new PbList<UninterpretedOption>())..hasExtensions=true;ServiceOptions():super();ServiceOptions clone()=>new ServiceOptions()..mergeFromMessage(this);BuilderInfo get info_=>_i;}class MethodOptions extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('MethodOptions')..m(999,'uninterpretedOption',()=>new UninterpretedOption(),()=>new PbList<UninterpretedOption>())..hasExtensions=true;MethodOptions():super();MethodOptions clone()=>new MethodOptions()..mergeFromMessage(this);BuilderInfo get info_=>_i;}class StreamOptions extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('StreamOptions')..m(999,'uninterpretedOption',()=>new UninterpretedOption(),()=>new PbList<UninterpretedOption>())..hasExtensions=true;StreamOptions():super();StreamOptions clone()=>new StreamOptions()..mergeFromMessage(this);BuilderInfo get info_=>_i;}class UninterpretedOption_NamePart extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('UninterpretedOption_NamePart')..a(1,'namePart',GeneratedMessage.QS)..a(2,'isExtension',GeneratedMessage.QB);UninterpretedOption_NamePart():super();UninterpretedOption_NamePart clone()=>new UninterpretedOption_NamePart()..mergeFromMessage(this);BuilderInfo get info_=>_i;}class UninterpretedOption extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('UninterpretedOption')..m(2,'name',()=>new UninterpretedOption_NamePart(),()=>new PbList<UninterpretedOption_NamePart>())..a(3,'identifierValue',GeneratedMessage.OS)..a(4,'positiveIntValue',GeneratedMessage.OU6,()=>makeLongInt(0))..a(5,'negativeIntValue',GeneratedMessage.O6,()=>makeLongInt(0))..a(6,'doubleValue',GeneratedMessage.OD)..a(7,'stringValue',GeneratedMessage.OY)..a(8,'aggregateValue',GeneratedMessage.OS);UninterpretedOption():super();UninterpretedOption clone()=>new UninterpretedOption()..mergeFromMessage(this);BuilderInfo get info_=>_i;List<UninterpretedOption_NamePart> get name=>getField(2);}class SourceCodeInfo_Location extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('SourceCodeInfo_Location')..a(1,'path',GeneratedMessage.K3,()=>new PbList())..a(2,'span',GeneratedMessage.K3,()=>new PbList())..hasRequiredFields=false;SourceCodeInfo_Location():super();SourceCodeInfo_Location clone()=>new SourceCodeInfo_Location()..mergeFromMessage(this);BuilderInfo get info_=>_i;List<int> get path=>getField(1);}class SourceCodeInfo extends GeneratedMessage{static final BuilderInfo _i=new BuilderInfo('SourceCodeInfo')..m(1,'location',()=>new SourceCodeInfo_Location(),()=>new PbList<SourceCodeInfo_Location>())..hasRequiredFields=false;SourceCodeInfo():super();SourceCodeInfo clone()=>new SourceCodeInfo()..mergeFromMessage(this);BuilderInfo get info_=>_i;}class CodeGeneratorRequest extends GeneratedMessage{static final BuilderInfo A__i=new BuilderInfo('CodeGeneratorRequest')..F_p(1,'fileToGenerate',GeneratedMessage.PS)..a(2,'parameter',GeneratedMessage.OS)..m(15,'protoFile',()=>new FileDescriptorProto(),()=>new PbList<FileDescriptorProto>())..hasRequiredFields=false;CodeGeneratorRequest():super();CodeGeneratorRequest.A_fromBuffer(List<int> i,[ExtensionRegistry r=ExtensionRegistry.EMPTY]):super.fromBuffer(i,r);CodeGeneratorRequest clone()=>new CodeGeneratorRequest()..mergeFromMessage(this);BuilderInfo get info_=>A__i;List<String> get fileToGenerate=>getField(1);String get parameter=>getField(2);List<FileDescriptorProto> get protoFile=>getField(15);}class CodeGeneratorResponse_File extends GeneratedMessage{static final BuilderInfo A__i=new BuilderInfo('CodeGeneratorResponse_File')..a(1,'name',GeneratedMessage.OS)..a(2,'insertionPoint',GeneratedMessage.OS)..a(15,'content',GeneratedMessage.OS)..hasRequiredFields=false;CodeGeneratorResponse_File():super();CodeGeneratorResponse_File clone()=>new CodeGeneratorResponse_File()..mergeFromMessage(this);BuilderInfo get info_=>A__i;String get name=>getField(1);void set name(String v){setField(1,v);}void set content(String v){setField(15,v);}}class CodeGeneratorResponse extends GeneratedMessage{static final BuilderInfo A__i=new BuilderInfo('CodeGeneratorResponse')..a(1,'error',GeneratedMessage.OS)..m(15,'file',()=>new CodeGeneratorResponse_File(),()=>new PbList<CodeGeneratorResponse_File>())..hasRequiredFields=false;CodeGeneratorResponse():super();CodeGeneratorResponse clone()=>new CodeGeneratorResponse()..mergeFromMessage(this);BuilderInfo get info_=>A__i;void set error(String v){setField(1,v);}List<CodeGeneratorResponse_File> get file=>getField(15);}
//# sourceMappingURL=protoc-gen-dart.map
//@ sourceMappingURL=protoc-gen-dart.map
